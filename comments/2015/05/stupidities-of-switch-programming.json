{
  "comments": [
    {
      "date": "21 May 2015 17:06",
      "html": "So true and to add<br />1), Many of the the switches even from the late 90s, 00s and last 5 yeas have a ton of features built in(beyond R/S) but are never used. Remember CMS on Cisco switches?(if you were a small shop yoiu had a built in secure NMS right there from a GUI to manage your network and even push policy/configs) You had Interface Macros/profiles etc all these &quot;programmable&quot; extras just sitting there for box by box use or centralized use if someone spent the time with an NMS system to utilize these features. <br /><br />2). Then there was the issue at one point in the last 20 years that most shops didn&#39;t want that &quot;plug and play&quot; switch? Why? Our old friend STP or any routing protocol, if all L3. Clients got burned early on with the PnP switch approach causing some convergence related outage so now out of policy and possibly security anything getting connected to the network still must be scrubbed/provisioned not &quot;discovered&quot; prior being added. Maybe just a mindset now but we should be past that these days as you pointed out. <br /><br />Big Switch Networks does some of that and I know there will be different uses of LLDP for this or any protocol with TLV to add a little extra to the sauce for discovery auto configure purposes. ",
      "id": "8906892992141877859",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "jsicuran",
      "profile": "http://www.amilabs.com",
      "pub": "2015-05-21T17:06:15.112+02:00",
      "ref": "8334108163977975242",
      "type": "comment"
    },
    {
      "date": "21 May 2015 17:43",
      "html": "Why would the vendors invest in simplifying configuration and deployment when there hasn&#39;t been any demand for it from the network engineering community? <br /><br />We - network engineers - are notorious for favoring deliberate complexity; foolishly believing that it gives us job security.",
      "id": "2821161212238211258",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "George",
      "profile": null,
      "pub": "2015-05-21T17:43:22.523+02:00",
      "ref": "8334108163977975242",
      "type": "comment"
    },
    {
      "date": "21 May 2015 18:26",
      "html": "Hi Ivan,<br /><br />Juniper has supported unnumbered P2P ethernet links with OSPF for about 10 years now.<br /><br />Have you seen Junos Fusion? It&#39;s based on IEEE 802.1BR and has all of the automation and plug-and-play functionality you want.",
      "id": "5132225080880724410",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Doug Hanks",
      "profile": null,
      "pub": "2015-05-21T18:26:46.545+02:00",
      "ref": "8334108163977975242",
      "type": "comment"
    },
    {
      "date": "22 May 2015 13:26",
      "html": "Interesting article, I completely agree with you regarding all sorts of automation that are not yet deployed but definitely they should. But I have a slightly different perspective regarding &quot;crazy stuff like SDN, APIs, Puppet/Chef&quot;: in fact that&#39;s the point - instead of buiilding a very expensive box with all features that you might or might not need for your business, buy a cheap one and do whatever you want for your internal purpose. In my humble opinion, the final goal is to spread the incomings of big vendors like Cisco (which doesn&#39;t completely agree with the ideas of openness and cheap) to others that provide different solutions.",
      "id": "5353530395583847419",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Mircea",
      "profile": null,
      "pub": "2015-05-22T13:26:12.999+02:00",
      "ref": "8334108163977975242",
      "type": "comment"
    },
    {
      "date": "22 May 2015 13:33",
      "html": "Well, people need to be careful what they ask for, since it could materialize...<br /><br />L3 is not the universal answer for everything, and properly engineered L2 could perform much better in many situations.<br /><br />Let&#39;s take the example of TRILL - internally, it does IP-like routing of packets via shortest paths, so it performs all required L3 functionalities behind the scenes. At the same time, it can autoconfigure nicknames (2-byte &quot;IP addresses&quot;), so addition of a new switch is no problem. And it doesn&#39;t need to care about LACP, since it can natively load-balance over multiple equal-cost paths.<br /><br />As you said - if you push all the complexities onto the network edge, it&#39;s totally irrelevant, what protocol the core clos fabric runs - as long as it responsively moves packets over the shortest paths. And the only difference between TRILL and IP is, that TRILL uses 2-byte nicknames, while IP uses 4-byte IPv4 or 16-byte IPv6 addresses. Routing protocol (IS-IS) is the same.<br />",
      "id": "7894833177318688295",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Marian \u010eurkovi\u010d",
      "profile": null,
      "pub": "2015-05-22T13:33:56.975+02:00",
      "ref": "8334108163977975242",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "25 May 2015 13:30",
          "html": "I agree with you (as always - this is getting boring ;).<br /><br />However, why should I do IP address management on intra-fabric links if I don&#39;t have to. Also, keep in mind that you&#39;re years ahead of everyone else. Not many people consider their network devices lego blocks that they&#39;ll use in their DIY solution; many enterprise customers bark at &quot;some assembly required&quot; idea.",
          "id": "549853047052964288",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2015-05-25T13:30:14.427+02:00",
          "ref": "5354569891656928891",
          "type": "comment"
        }
      ],
      "date": "24 May 2015 20:38",
      "html": "Everything boils down to standarization. If you can standarize your deployment, you can template it and, if you can template, you don&#39;t care if your vendor support unnumbered interfaces or not or if your base configuration requires 100 lines or 1000 lines.<br /><br />And for the LLDP example that you mentioned, you can easily mimic that behavior yourself with ZTP in EOS (EOS supports loading a python script instead of a configuration file during the ZTP process).",
      "id": "5354569891656928891",
      "image": "https://1.bp.blogspot.com/-LMLfK3vIwBg/VtcDJHiLQzI/AAAAAAAABik/TMb1dNS7AP8/s32/IMG_0919.png",
      "name": "David Barroso",
      "profile": "https://www.blogger.com/profile/08333059712411851393",
      "pub": "2015-05-24T20:38:54.068+02:00",
      "ref": "8334108163977975242",
      "type": "comment"
    },
    {
      "date": "25 May 2015 14:37",
      "html": "Alcatel Lucent Enterprise has an auto-configuration feature which can detect linkagg, spb network and access ports, routing adjacencies etc.",
      "id": "2819135588681046491",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2015-05-25T14:37:26.028+02:00",
      "ref": "8334108163977975242",
      "type": "comment"
    },
    {
      "date": "28 May 2015 16:40",
      "html": "Mmmmm, thats a bit narrow minded, no offense.<br /><br />Vendors do what customers demand, they have a long list of things to do and they make decisions to prioritize based on rational business reasons, its not a conspiracy. <br /><br />Programmability and automation additions are all ways to get this done. Take a chhll pill.<br /><br />Rant is easy.",
      "id": "4995736340085364261",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2015-05-28T16:40:11.878+02:00",
      "ref": "8334108163977975242",
      "type": "comment"
    },
    {
      "date": "30 May 2015 03:59",
      "html": "I would also add that Doug Hanks and Juniper are making a lot of this a reality with OpenCLOS and ZTP. Good stuff",
      "id": "1942095034152207236",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Dan Houtz",
      "profile": null,
      "pub": "2015-05-30T03:59:24.142+02:00",
      "ref": "8334108163977975242",
      "type": "comment"
    }
  ],
  "count": 10,
  "id": "8334108163977975242",
  "type": "post",
  "url": "2015/05/stupidities-of-switch-programming.html"
}