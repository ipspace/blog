{
  "comments": [
    {
      "date": "07 July 2015 10:17",
      "html": "Sorry to sound like a politician but &quot;here here&quot;",
      "id": "3996786450490916932",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Steven Iveson",
      "profile": "http://packetpushers.net/",
      "pub": "2015-07-07T10:17:48.751+02:00",
      "ref": "6412593260256239148",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "07 July 2015 15:56",
          "html": "You&#39;re talking about this young French company, right?<br /><br />http://blog.ipspace.net/2012/02/6wind-solving-virtual-appliance.html",
          "id": "1261998037860633298",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2015-07-07T15:56:33.744+02:00",
          "ref": "4126905694770906612",
          "type": "comment"
        }
      ],
      "date": "07 July 2015 14:45",
      "html": "Hey Ivan,<br />You should be very interested by this young French company 6Wind which has just been &quot;validated&quot; by Cisco: http://www.prnewswire.com/news-releases/cisco-investments-invests-in-6wind-for-high-performance-networking-300108853.html. <br />They design multiple high performance networking softwares, such as a &quot;Virtual Accelerator&quot;. <br /><br />It leverages DPDK to offer 20 Gbits/s of OVS bandwidth per Intel\u2019s Xeon E5-2600 v2 core, scaling linearly with the number of cores. Some features include VXLAN &amp; VRF. It is supported on all major Linux distributions with a multi-vendor NIC support from Avago/Emulex, Intel and Mellanox: http://www.6wind.com/products/6wind-virtual-accelerator/<br />",
      "id": "4126905694770906612",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Unknown",
      "profile": "https://www.blogger.com/profile/00097751192210829089",
      "pub": "2015-07-07T14:45:34.391+02:00",
      "ref": "6412593260256239148",
      "type": "comment"
    },
    {
      "date": "07 July 2015 17:50",
      "html": "Great ;) I thought they deserved to appear somehow in your interesting article, although they&#39;ve not been - yet? - invited in your &quot;Software Gone Wild podcast&quot;. ",
      "id": "2039303984005764181",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Unknown",
      "profile": "https://www.blogger.com/profile/00097751192210829089",
      "pub": "2015-07-07T17:50:58.392+02:00",
      "ref": "6412593260256239148",
      "type": "comment"
    },
    {
      "date": "07 July 2015 21:47",
      "html": "1.4Mpps mentioned in that article is far from what a Linux stack can actually deliver.<br /><br />Here is an article (Google Translate required) - where a guy describes how to make an app that can capture **9** Mpps.<br /><br />http://habrahabr.ru/post/261161/",
      "id": "2770740379175171284",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Vlad_CM",
      "profile": "https://disqus.com/by/Vlad_CM/",
      "pub": "2015-07-07T21:47:39.935+02:00",
      "ref": "6412593260256239148",
      "type": "comment"
    },
    {
      "date": "09 July 2015 10:48",
      "html": "Overall I find this incoherent. You start off about an opinion of many, that switching from kernel to user space forwarding is necessary for good performance while your tone implies this isn&#39;t true. The link you post explains how to achieve good performance and you summarize this into three &quot;tricks&quot;. All involve using more than one core so we can conclude that the kernel stack scales well at least.<br /><br />You move on to an analysis of VM performance. Most don&#39;t achieve good performance as they make the mistake of relying on kernel calls and not &quot;optimising it&quot;. You mention that Juniper vMX is optimized. Since vMX is using DPDK and SR-IOV to achieve good performance I&#39;m not sure where we stand. Is the kernel good enough or not?<br /><br />What is the point of the article? If you don&#39;t want to reach a conclusion on one being better than the other I think you need to better explain the pros and cons of each respective solution. For example, DPDK won&#39;t help you much if you are trying to optimise your web server but if you are trying to build a virtual router or load balancer it probably is the tool for the job.<br /><br />Also, I find the topic of &quot;good performance&quot; to be an interesting one and really quite subjective. You mention 1Gbps being good enough for most but I don&#39;t that mean we can talk about it as &quot;good performance&quot; in absolute terms. Is the kernel performing well when you need 10 cores to achieve wire speed 10GE if you can do the same with Snabb switch on a single core?",
      "id": "5394497871457051790",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Kristian Larsson",
      "profile": null,
      "pub": "2015-07-09T10:48:40.665+02:00",
      "ref": "6412593260256239148",
      "type": "comment"
    },
    {
      "date": "09 July 2015 16:48",
      "html": "if you go and name vendors, ALU managed to push 320G on their vSR....",
      "id": "2073075973989812640",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Someone",
      "profile": null,
      "pub": "2015-07-09T16:48:30.672+02:00",
      "ref": "6412593260256239148",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "10 July 2015 16:24",
          "html": "Vyatta 5600 uses DPDK<br /><br />https://www.brocade.com/en/products-services/software-networking/network-functions-virtualization/5600-vrouter.html",
          "id": "247448887371354993",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2015-07-10T16:24:27.175+02:00",
          "ref": "1606345853557464118",
          "type": "comment"
        }
      ],
      "date": "10 July 2015 16:15",
      "html": "I&#39;m confused....  you are either forwarding your packets using the kernel&#39;s IP forwarding feature, or you are using something else.<br /><br />My understanding is that Vyatta  does the same as other distributions and just sets IPtables rules for any firewall restrictions, and relies on the kernel to do forwarding,<br /><br />And Juniper vMX doesn&#39;t do that.<br /><br />So you&#39;re saying you think Vyatta is optimized, and it&#39;s OK  to just use the kernel&#39;s IP forwarding features when implementing a firewall?<br /><br />Do you have any pointers then,  to how I would go about optimizing it,  if I wished to engineer a graphical firewall frontend based on a Linux kernel doing the packet forwarding,   since whatever Vyatta does is deemed good enough?<br /><br />I don&#39;t think Vyatta uses a modified Linux kernel,   so  If the kernel is doing all the forwarding;   I am wondering  literally what sort of things you think their optimization consists of.<br /><br />",
      "id": "1606345853557464118",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Draco",
      "profile": null,
      "pub": "2015-07-10T16:15:27.146+02:00",
      "ref": "6412593260256239148",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "20 July 2015 14:02",
          "html": "True - Unix (and consequently Linux) were designed for servers (or control plane processes). To get around this weakest link, you have to bypass Linux as much as possible - by downloading forwarding information into hardware (the Cumulus way) or doing packet processing in user-mode processes running on dedicated cores (the DPDK/PF_RING way).",
          "id": "4778354348884867361",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2015-07-20T14:02:32.685+02:00",
          "ref": "1972872601162420439",
          "type": "comment"
        }
      ],
      "date": "20 July 2015 02:49",
      "html": "Regarding letter (D) weakest links....Linux OS was designed to operate end stations / servers, not traffic forwarding nodes like routers / switches.  Do you think this will be exposed soon as the &quot;weakest link&quot; in networking industry?",
      "id": "1972872601162420439",
      "image": "//images-blogger-opensocial.googleusercontent.com/gadgets/proxy?url=http://1.bp.blogspot.com/-j3GGfKuoRb4/VYDmEVI9C7I/AAAAAAAAAjs/aj4cvQNi2uk/s151/IMG_1013.JPG&container=blogger&gadget=a&rewriteMime=image/*",
      "name": "Jeff Behrns",
      "profile": "https://www.blogger.com/profile/09771677856264877238",
      "pub": "2015-07-20T02:49:31.582+02:00",
      "ref": "6412593260256239148",
      "type": "comment"
    },
    {
      "date": "17 August 2015 02:43",
      "html": "The thing is, if I start with that same single-threaded 300kpps of 128B UDP on a Mellanox CX3 card, I get to 3.6Mpps just doing LD_PRELOAD=libvma.so.<br /><br />Mellanox engineers I&#39;ve spoken with claim this will scale to 37Mpps with multi-threaded senders.",
      "id": "558388583199713415",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "James Cape",
      "profile": "https://www.blogger.com/profile/02768293112004135947",
      "pub": "2015-08-17T02:43:39.064+02:00",
      "ref": "6412593260256239148",
      "type": "comment"
    }
  ],
  "count": 12,
  "id": "6412593260256239148",
  "type": "post",
  "url": "2015/07/is-linux-tcpip-stack-really-that-slow.html"
}