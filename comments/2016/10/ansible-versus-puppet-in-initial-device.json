{
  "comments": [
    {
      "date": "04 October 2016 09:33",
      "html": "We are using Ansible for network automation at Hostinger and we are happy with it. We tried to use Chef with Cumulus, but the effect was the same, because Cumulus&#39;s Chef version doesn&#39;t have support with chef-zero, only chef-solo, which is not compatible with chef-server together. I meant, that Ansible vs. Chef-solo is the same. We solved this running Ansible from Jenkins + Github. We push some changes (new BGP neigbors, change firewall rules, change bridge settings, etc.) in Github and Jenkins just runs Ansible on every change in Github. ",
      "id": "2483661178342774142",
      "image": "https://3.bp.blogspot.com/-0yDrxa0sfWI/V5sF6eo4q6I/AAAAAAAAHAs/n3VkBY82SbgXVnHCcCDSY7_sOZaHvufEwCK4B/s32/avatar.jpg",
      "name": "Donatas Abraitis",
      "profile": "https://www.blogger.com/profile/10268349264835307217",
      "pub": "2016-10-04T09:33:51.125+02:00",
      "ref": "1248208024415592074",
      "type": "comment"
    },
    {
      "date": "04 October 2016 10:41",
      "html": "The issue of configuration that exists outside of ZTP is very irritating. In Juniper-world, for example, virtual chassis configuration exists outside of the configuration - in Cisco parlance it is an enable command to enable VC, rather than a configuration command. Irritating as it means it is difficult to fully automate the build (although we have worked around it).",
      "id": "3061657713066055574",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2016-10-04T10:41:23.455+02:00",
      "ref": "1248208024415592074",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "04 October 2016 11:12",
          "html": "Problem with &quot;central points&quot; can be solved by using distributed key/value stores, for e.g. Consul.",
          "id": "842656588556339429",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Dmitri Kalintsev",
          "profile": "https://www.blogger.com/profile/16576726865924052243",
          "pub": "2016-10-04T11:12:46.917+02:00",
          "ref": "768384639123128976",
          "type": "comment"
        },
        {
          "date": "04 October 2016 11:16",
          "html": "Which is OK if you do it correctly, re my 2) above :)",
          "id": "2963510769441063205",
          "image": "https://3.bp.blogspot.com/-yDV3X8Bv1c4/V_NxDSf4qoI/AAAAAAAAAlw/B76kblby8Ag-GjGuDrkFCQZEEzOJvgNRACK4B/s32/UoUz5ofA.jpg",
          "name": "@beddari",
          "profile": "https://www.blogger.com/profile/17983260336099883346",
          "pub": "2016-10-04T11:16:37.639+02:00",
          "ref": "768384639123128976",
          "type": "comment"
        }
      ],
      "date": "04 October 2016 11:02",
      "html": "It is quite interesting seeing this discussion and knowing how my old self went through all the same when I started automating application server builds a long time ago.<br /><br />The real choice here, that you should spend some time thinking about, is whether you want your devices to be &quot;as capable of self-healing as possible&quot; or if you just don&#39;t care. No secret that I certainly DO care, I want all my parts of my infrastructure to be autonomous, if at all possible. Autonomy leads to greater certainty, and if there&#39;s one attribute you want inherent in your networks, it&#39;s certainty. http://shop.oreilly.com/product/0636920036289.do<br /><br />Backing up, if you are doing network automation because you need to solve problems you have _right now_, then something like Ansible using the push model is likely your only option. However, if you are designing future infrastructure networks choosing a model that builds on the autonomous actors pattern is a massive benefit. At smaller scales than you&#39;d think, is my experience.<br /><br />Puppet masters and chef servers mostly confuse people as it again strongly couples your devices to a central point, which you don&#39;t really want. Fix it by 1) Ship (most, if not all) your configuration out to every device and let agents converge devices to their known state 2) Use service discovery mechanisms for any runtime dynamic data<br /><br />There, saved you 100s of consulting hours, go make greatness :D",
      "id": "768384639123128976",
      "image": "https://3.bp.blogspot.com/-yDV3X8Bv1c4/V_NxDSf4qoI/AAAAAAAAAlw/B76kblby8Ag-GjGuDrkFCQZEEzOJvgNRACK4B/s32/UoUz5ofA.jpg",
      "name": "@beddari",
      "profile": "https://www.blogger.com/profile/17983260336099883346",
      "pub": "2016-10-04T11:02:03.234+02:00",
      "ref": "1248208024415592074",
      "type": "comment"
    },
    {
      "date": "04 October 2016 11:09",
      "html": "Not *really* ZTP/router configuration, but.. Puppet doesn&#39;t need to have an agent installed on the node. <br /><br />Here&#39;s an example I dealt with just in the last few days that does exactly that - uses Puppet and a plug-in that uses REST to send config commands to apply configuration to a Brocade Virtual Traffic Manager with a bare-minimum configuration applied (has an IP, login/pass and REST enabled):<br /><br />https://github.com/dkalintsev/Brocade/tree/master/vADC/CloudFormation/Templates/Variants-and-experimental/Configured-by-Puppet<br /><br />In this example, I have a server that&#39;s external to the vTM being configured, where I inject parameters into a Puppet manifest, including the target node config (IP, login/pass), and then run &quot;puppet apply &quot; to push it, as opposed to more traditional &quot;pull&quot;. There&#39;s no puppet installed on the vTM - it simply gets API calls.<br /><br />I&#39;m guessing a similar approach should probably work just fine with some router with NETCONF over ssh or something.",
      "id": "6192677045921712025",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Dmitri Kalintsev",
      "profile": "https://www.blogger.com/profile/16576726865924052243",
      "pub": "2016-10-04T11:09:36.967+02:00",
      "ref": "1248208024415592074",
      "type": "comment"
    }
  ],
  "count": 6,
  "id": "1248208024415592074",
  "type": "post",
  "url": "2016/10/ansible-versus-puppet-in-initial-device.html"
}