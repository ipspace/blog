{
  "comments": [
    {
      "comments": [
        {
          "date": "13 October 2016 23:24",
          "html": "Donatas, you know that for big networks, having agents won&#39;t make automation scale. Agentless is still better in that it uses the built-in/existing protocol. Also, from a cost perspective, agents can be expensive.",
          "id": "2918428270687211845",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Unknown",
          "profile": "https://www.blogger.com/profile/13283801636673880237",
          "pub": "2016-10-13T23:24:35.074+02:00",
          "ref": "1616481698218243880",
          "type": "comment"
        },
        {
          "date": "14 October 2016 22:03",
          "html": "There are a few problems with this request in that you are asking network vendors to <br />A.) Support &quot;CM&quot; tools that were created for server systems and their state, not configuration <br />B.) Use these tools to provide &quot;CM&quot; for configuration - which is what you are mostly concerned with on network devices. <br />C.) Idempotency for configuration, without context, is much harder than idempotency for state - i.e. is service X running, is pkg Y installed, etc.<br />D.) As Leke mentioned, scaling the disposition and logistics of these agents is very tough when you get into the thousands of devices.<br /><br />All that being said, there are several vendors that support both Puppet and Chef in one form or another.  Junos supports them on all but the SRX and PTX platforms as of their latest release.  <br /><br />Both Ansible and Saltstack are much better ways of attacking network state/configuration management than Puppet and Chef.  Ansible doesn&#39;t require agents at all and SaltStack has a great proxy system that allows for their proxy agents to work without much configuration at all and work against any device you want it to, regardless of vendor.  You just have to have the modules - the same way you do for Ansible anyway.  <br /><br />This is a case of missing the forest for the trees.  You are narrowing down your focus for automation based on the set criteria of a product.  And, that product wasn&#39;t even meant to do what you want in the first place.  To really get the most out of automation, what Ivan has put together is a base set of must haves or don&#39;t even attempt it.  If you are not looking at the capabilities of the vendor OS from the perspective of what you need to accomplish business (not technical) objectives via automation, then you are missing said forest.  ",
          "id": "8266722309431199041",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Edward",
          "profile": "https://www.blogger.com/profile/14125453173202486491",
          "pub": "2016-10-14T22:03:01.339+02:00",
          "ref": "1616481698218243880",
          "type": "comment"
        }
      ],
      "date": "13 October 2016 09:45",
      "html": "What I&#39;m actually missing today from network OS is seamlessly running automation software agents, for instance chef-client, puppet slave, etc.. OpenSwitch tried that, but still missing this. Cumulus doesn&#39;t have this too, only agent-less is supported. Of course, you can make it work, but it would be workaround, not just built-in solution.",
      "id": "1616481698218243880",
      "image": "https://3.bp.blogspot.com/-0yDrxa0sfWI/V5sF6eo4q6I/AAAAAAAAHAs/n3VkBY82SbgXVnHCcCDSY7_sOZaHvufEwCK4B/s32/avatar.jpg",
      "name": "Donatas Abraitis",
      "profile": "https://www.blogger.com/profile/10268349264835307217",
      "pub": "2016-10-13T09:45:58.857+02:00",
      "ref": "2941400973198737946",
      "type": "comment"
    },
    {
      "date": "13 October 2016 15:33",
      "html": "So from this list Junos seems the must mature solution in 2016, and Cisco IOS falls behind as usual.",
      "id": "5399796736083012652",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2016-10-13T15:33:45.760+02:00",
      "ref": "2941400973198737946",
      "type": "comment"
    },
    {
      "date": "13 October 2016 15:41",
      "html": "No intermediate abstract software from OEM for automation. We tried doing automating Alteon SLB using vDirect. But the catch is you have to create template residing in vDirect and API calls to be built in our automation software. Moreoever template should be built in a specific language - Apache Velocity. This counter-intuitively complicates the entire automation process, so we rolled back to CLI based screen-scraping automation. ",
      "id": "9172996296056868681",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "arun",
      "profile": "https://www.blogger.com/profile/06284670119320225771",
      "pub": "2016-10-13T15:41:25.347+02:00",
      "ref": "2941400973198737946",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "14 October 2016 22:08",
          "html": "Juniper does all 3 of those.  What are you using?",
          "id": "2189369349756807186",
          "image": "https://resources.blogblog.com/img/blank.gif",
          "name": "Anonymous",
          "profile": null,
          "pub": "2016-10-14T22:08:08.443+02:00",
          "ref": "7768540374750385483",
          "type": "comment"
        },
        {
          "date": "17 October 2016 10:36",
          "html": "Something other than Juniper obviously :)<br />Unfortunately ENT campus/DC are dominated by other vendors",
          "id": "1883570344113274413",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Michael Kashin",
          "profile": "https://www.blogger.com/profile/14125341240086592055",
          "pub": "2016-10-17T10:36:39.122+02:00",
          "ref": "7768540374750385483",
          "type": "comment"
        },
        {
          "date": "03 November 2016 21:11",
          "html": "To quote the article - \u201cVote with your wallet. If your current vendor doesn\u2019t support the network automation functionality you need, move on.\u201d<br /><br />If the dominant vendor doesn&#39;t support the features you need, don&#39;t support them.",
          "id": "610491995129976189",
          "image": "https://resources.blogblog.com/img/blank.gif",
          "name": "Anonymous",
          "profile": null,
          "pub": "2016-11-03T21:11:44.884+01:00",
          "ref": "7768540374750385483",
          "type": "comment"
        }
      ],
      "date": "13 October 2016 17:10",
      "html": "* Well documented libraries to work with those APIs. I don&#39;t have to use ncclient and python requests to work with Netconf and Rest<br />* Seconding Donatas above - network OSs have to support standard CM clients not just in powerpoint (even though cumulus does work with standard chef client)<br />* Network OSs should have x86 virtual replicas of major hw products. It&#39;s about time network engineers had their own dev and staging environments, just like programmers<br />",
      "id": "7768540374750385483",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Michael Kashin",
      "profile": "https://www.blogger.com/profile/14125341240086592055",
      "pub": "2016-10-13T17:10:50.316+02:00",
      "ref": "2941400973198737946",
      "type": "comment"
    },
    {
      "date": "14 October 2016 07:36",
      "html": "In addition to support standard models it must at least provide schema models with documentation, if possible in YANG since it seems to be current way.<br />Also we are talking about devops, telemetry is to be supported with support of http push and at least one protocol for asynchronous messaging (amqp, xmpp, mqtt, Kafka...)<br />",
      "id": "7368667960612573478",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Unknown",
      "profile": "https://www.blogger.com/profile/01604817518401015592",
      "pub": "2016-10-14T07:36:00.522+02:00",
      "ref": "2941400973198737946",
      "type": "comment"
    },
    {
      "date": "19 October 2016 14:53",
      "html": "I came across this, while preparing something similar, but at a higher level and had posted requesting comments in the network to code slack team:<br /><br />\u00fc  The device should lend itself to virtualization, as deployed in production - so, if it is a firewall, it should be &#39;virutalizable&#39; with all production features (multi-context, transparent firewall etc)<br />\u00fc  The device should be created with an api-first approach (especially if it is a closed vendor). If there is a feature on the product, it should be accessible via an API<br />\u00fc  If the enterprise intends to manage the device using a centrallized controller (BigIQ, CSM etc), every feature on that management platfrom should be available as a north-bound API, consumable by automation tools<br /><br /><br />====<br />However, since then, I have been rethinking the API piece. Given that we look up to our *nix pioneers as standard bearers for system automation, why do we demand it? I am now more inclined to think, that the API mandate should only be if the vendor OS is a closed system. If an open system vendor, creates APIs for applications running on their system (say for BGP configs) - kudos to them, but no longer think that should be mandated. Something like Ansible could be the &#39;API broker&#39; for higher level workflow tools, to interact with the services on that platform....<br /><br />Thoughts?",
      "id": "3159927083880281816",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Ajay",
      "profile": "http://twitter.com/termlen0",
      "pub": "2016-10-19T14:53:04.495+02:00",
      "ref": "2941400973198737946",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "25 October 2016 19:27",
          "html": "Dear Anonymous,<br /><br />Thanks for a marketing manifesto ;) If you&#39;d have shared your contact details or contacted me offline, we could add IOS XR to the lists. Alas...<br /><br />Now for the details:<br /><br />&quot;Cisco is big time into Model Driven Manageability&quot; &lt;&lt; what counts for me is what&#39;s shipping and documented. Big-time statements and visions are nice, executing on them is even better.<br /><br />&quot;Retrieval of Structured Operational data on IOS-XR and Nexus&quot; &lt;&lt; Nexus OS is in the list. See above for IOS-XR.<br /><br />Streaming telemetry - interesting, but not the topic of this blog post.<br /><br />Open Config and IETF models - mentioned.<br /><br />Structured configuration data - Cisco has at least four different network operating systems, so please specify which one(s) support it. The last time I checked Nexus OS didn&#39;t even have &quot;get-config&quot; NETCONF command. I know that has been added, but I haven&#39;t tested what it returns yet. Checking how XML configuration looks in latest versions of IOS XE is already on my to-do list.",
          "id": "5600939796014861249",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2016-10-25T19:27:18.520+02:00",
          "ref": "1792883115184277297",
          "type": "comment"
        },
        {
          "date": "28 October 2016 11:12",
          "html": "Only a lowly engineer, who labors on the code and is not authorized to speak for the company, and hence the anonymity. If you want to disparage an honest source of info, so be it. <br /><br />Looks like you are are paid shill for Brocade based on the quote earlier in your blog &quot;The Pass/Fail information included below was collected to the best of my knowledge with extensive help from Jason Edelman, Nick Buraglio, David Barroso and several Brocade engineers (THANK YOU!).&quot; . <br /><br />This is the last post from me.",
          "id": "3730173121764246551",
          "image": "https://resources.blogblog.com/img/blank.gif",
          "name": "Anonymous",
          "profile": null,
          "pub": "2016-10-28T11:12:37.273+02:00",
          "ref": "1792883115184277297",
          "type": "comment"
        },
        {
          "date": "05 November 2016 10:36",
          "html": "Response here: http://blog.ipspace.net/2016/11/breaking-news-im-vendor-shill.html",
          "id": "7805353463625848060",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2016-11-05T10:36:04.164+01:00",
          "ref": "1792883115184277297",
          "type": "comment"
        },
        {
          "date": "21 November 2017 01:53",
          "html": "Ivan, you must work on your Brocade shilling.  You had them failing most of the categories.",
          "id": "6127886037201130510",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Unknown",
          "profile": "https://www.blogger.com/profile/02435388160508799456",
          "pub": "2017-11-21T01:53:42.000+01:00",
          "ref": "1792883115184277297",
          "type": "comment"
        }
      ],
      "date": "25 October 2016 15:50",
      "html": "Cisco is big time into Model Driven Manageability, with support for well defined data models for both configuration and operational data. Cisco provides development kits that allow for manipulation of the data models programmatically.<br /><br />Cisco does support retrieval of Structured Operational data on IOS-XR and Nexus platforms in the recent releases. The operational data can be streamed out from the router and received by a client with a push model, rather than the pull model normally supported with SNMP.  The telemetry stream can formatted in JSON, Google Protocol Buffers or Google KeyValue Protocol Buffer formats. The streaming telemetry is supported using the non-proprietary Open Config Telemetry model for subscribing to the operational data that the user is interested in. Most of the Open Config models are supported and Cisco native models are supported for other areas that don&#39;t have either OC models or the OC models are still being worked out. The subscriptions can themselves be made over Netconf/XML or Google RPC session to the router.<br /><br />Cisco also supports structured configuration data by the way of ITEF/Open Config/Cisco Native Yang Models over a Netconf session.<br />Cisco also supports Google RPC mechanism to push a config change structured as a JSON object to the router.<br /><br />Cisco also has built and open sourced a framework called YDK (Yang Development Kit) that allows a user to compile the yang models into objects in a language like python (other language bindings are being worked on). The user is then able to manipulate the config on the router by programmatically setting attributes on the config objects and performing a CRUD operation  to write the data to the router to have the config take affect. ",
      "id": "1792883115184277297",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2016-10-25T15:50:06.970+02:00",
      "ref": "2941400973198737946",
      "type": "comment"
    },
    {
      "date": "02 November 2016 07:01",
      "html": "Partial: IOS XE (IETF), IOS XR (OpenConfig)<br />This says a lot about Architecture and Standards in Vendors...if you can&#39;t get it right within a vendor, how are you going to adapt to market standards.",
      "id": "8987103127696326054",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Unknown",
      "profile": "https://www.blogger.com/profile/04966717029583402871",
      "pub": "2016-11-02T07:01:57.468+01:00",
      "ref": "2941400973198737946",
      "type": "comment"
    },
    {
      "date": "29 December 2016 21:58",
      "html": "Great post Ivan!",
      "id": "92280373210825261",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Unknown",
      "profile": "https://www.blogger.com/profile/07142261215836940950",
      "pub": "2016-12-29T21:58:51.813+01:00",
      "ref": "2941400973198737946",
      "type": "comment"
    },
    {
      "date": "30 December 2016 09:46",
      "html": "Hello Ivan! First of all thank you for the post. It is very good idea to make the structured list of requirements to classify the current situation with the vendors gear. And it is important to the community to have got the minimally adequate list of the requirements to be able further to automate device configuration in the right manner.<br /><br />DISCLAIMER: I am not represent/work for any vendor of the equipment. It is just my experience. If any of my thoughts are not right, may be I have used not right tool for this or I have not enough information about the vendor devices, because it is not publicly available.<br /><br />So having netconf is good. But devices also must publish all the configuration modules, as the capabilities in the netconf hello messages. I have tried IOS-XR and JunOS. It is not true f.e. for JunOS. But works for IOS-XR.<br /><br />The next key thing is the ability to get YANG modules out from the device for declared capabilities (ietf-netconf-monitoring RFC6022). it works well for both JunOS and IOS-XR.<br /><br />And the last but not least. The obtained YANG modules must be able to be compiled ;-). F.e. with publicly available pyang, but more than that better with &quot;pyang --ietf&quot;. So this not true for both of them IOS-XR for several modules. And for JunOS YANG models gotten out from device.<br /><br />So industry is heading further for the bright future and this good for all of us. But clear some marketing hype sometimes also very important.",
      "id": "4645876659149489420",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Evgeny Zobnitsev",
      "profile": "http://eaz.tel",
      "pub": "2016-12-30T09:46:27.199+01:00",
      "ref": "2941400973198737946",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "11 November 2017 20:54",
          "html": "I&#39;m positive someone must be testing them ;)",
          "id": "4834766149331115926",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2017-11-11T20:54:00.549+01:00",
          "ref": "1993147133741782019",
          "type": "comment"
        }
      ],
      "date": "11 November 2017 09:53",
      "html": "Are equipment such as Huawei &amp; ZTE also tested? ",
      "id": "1993147133741782019",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Beny D Setyawan",
      "profile": "https://www.blogger.com/profile/13489808497529047064",
      "pub": "2017-11-11T09:53:39.540+01:00",
      "ref": "2941400973198737946",
      "type": "comment"
    },
    {
      "date": "22 November 2017 17:55",
      "html": "We need much more. NETCONF is not designed for real-time control loops. As usual network devices are so bad compared to real-life needs that we would need a hybrid SDN architecture to have the possibility of correcting what the vendors are not motivated to do. But none of the big vendors support this. They have some fake implementations of programmibility. But when you really want to use them, you recognize it is unfinished, not enough fast, not scalable, etc. In safety critical network it is still better to stick to TDM (PDH/SDH) and wait for some reasonable solutions to come out. New generation of SD-WAN is a step into the right direction, but still a lot to do...<br />",
      "id": "7094371302628629625",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Bela",
      "profile": "https://www.blogger.com/profile/07985346761439657130",
      "pub": "2017-11-22T17:55:52.372+01:00",
      "ref": "2941400973198737946",
      "type": "comment"
    },
    {
      "date": "09 January 2019 17:04",
      "html": "I disagree that streaming telemetry/statistics aren&#39;t relevant to this hypothetical RFP.  In recent years, network devices have become far less responsive as API&#39;s are decoupled from OS&#39;s, and OS&#39;s are decoupled from ASICs. For example, CLI/SNMP counters are no longer real-time but instead refreshed every 5-15 seconds. Meanwhile, SNMP TRAP &amp; Syslog events are lazily dispatched (though their embedded timestamps are largely accurate). This loss of &quot;tactility&quot; can be a real problem for a modern network tuned for millisecond control plane. It&#39;s worth pressing your vendor on this topic.",
      "id": "8688123279533630311",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "lcw",
      "profile": "https://www.blogger.com/profile/10562240567667879482",
      "pub": "2019-01-09T17:04:12.537+01:00",
      "ref": "2941400973198737946",
      "type": "comment"
    }
  ],
  "count": 23,
  "id": "2941400973198737946",
  "type": "post",
  "url": "2016/10/network-automation-rfp-requirements.html"
}