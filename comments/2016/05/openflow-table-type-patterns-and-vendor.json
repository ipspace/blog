{
  "comments": [
    {
      "comments": [
        {
          "date": "20 June 2016 15:11",
          "html": "From my knowledge, Broadcom documentation provides access to ALL resources (tables) in the ASIC therefore if you implement Openflow in your own switches you can access those resources anyway, without needing TTP, so no, TTP does not provide you with access to tables that you otherwise could not, just some more openness.",
          "id": "2952340474652574758",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Unknown",
          "profile": "https://www.blogger.com/profile/04646516422856182707",
          "pub": "2016-06-20T15:11:55.300+02:00",
          "ref": "1235582826075870551",
          "type": "comment"
        }
      ],
      "date": "26 May 2016 20:23",
      "html": "Ivan, just read this blog post.  While I appreciate your position, I\u2019d like to point out a few items:<br /><br />1. Yes, we work with Broadcom, but we\u2019re also working with Cavium, and are in discussions with other switch ASIC vendors.  Truth is, we will evaluate any switch ASIC and port to it if the customer demand and use case is there<br /><br />2. The whole point about TTP is that it abstracts the forwarding information from the ASIC.  This allows us to get scale #\u2019s comparable to the incumbents, but in an open, standards-based way on white box hardware<br /><br />3. Final point, our customers love what we are doing with TTP and OpenFlow for precisely the reasons above. It eliminates the lock-in and gives them more flexibility to use OpenFlow in their networks<br /><br />We (Pica8) spoke about this topic at ONS earlier this spring.  Here&#39;s a link and also to another article as well:<br /><br />http://www.linuxfoundation.org/news-media/blogs/browse/2016/03/what-would-you-do-two-million-flows<br /><br />http://www.datacenterdynamics.com/core-edge/scaling-openflow-deployments/95955.fullarticle<br /><br />Best,<br />Calvin (the marketing guy) :-)",
      "id": "1235582826075870551",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Calvin Chai",
      "profile": "http://pica8.com",
      "pub": "2016-05-26T20:23:09.990+02:00",
      "ref": "593510365086871648",
      "type": "comment"
    },
    {
      "date": "27 May 2016 08:07",
      "html": "#2 - Totally disagree, and TTPs have nothing to do scaling and abstracting the forwarding information. Let me copy straight from TTP FAQ:<br /><br />&quot;TTPs are &quot;Table Type Patterns&quot; \u2014 templates that spell out what OF-Switch protocol features and messages a switch needs to support (and a controller needs to abide by) in a given role (for a given \u201cuse case\u201d).&quot;",
      "id": "2572654117848972983",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Ivan Pepelnjak",
      "profile": "https://www.blogger.com/profile/13457151406311272386",
      "pub": "2016-05-27T08:07:04.061+02:00",
      "ref": "593510365086871648",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "01 June 2016 08:52",
          "html": "&quot;TTPs facilitate the use of tables that were not used before thus improving scalability.&quot;<br /><br />Absolutely wrong. Multiple tables were part of OpenFlow 1.1 (or vendor extensions in OpenFlow 1.0) and were available for years from multiple vendors including NEC, HP and Cisco.<br /><br />Let&#39;s stop applying layers of lipstick onto this particular pig.",
          "id": "1130973597058580559",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2016-06-01T08:52:31.183+02:00",
          "ref": "8450916895597715784",
          "type": "comment"
        }
      ],
      "date": "31 May 2016 19:38",
      "html": "TTPs facilitate the use of tables that were not used before thus improving scalability.<br /><br />Yes, you could say that those tables could still be accessed *somehow*. But I believe the work of abstracting the chip pipeline is better done from the people who made the chip.",
      "id": "8450916895597715784",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Unknown",
      "profile": "https://www.blogger.com/profile/04722659733118992647",
      "pub": "2016-05-31T19:38:25.059+02:00",
      "ref": "593510365086871648",
      "type": "comment"
    },
    {
      "date": "31 May 2016 20:14",
      "html": "With out Hype does anything sells now a days? If you look at the Openflow Spec, it introduced even the TLV type format as something that is like a new way to provide flexibility even though it existed for a long time and most of the networking protocols rely on that.<br /><br />The OpenFlow 1.2 Switch Specification builds significantly upon previous releases<br />in many ways, including these significant improvements:<br />\u2022 It adds support for IPv6. In addition to the previous support for IPv4, MPLS,<br />and L2 headers, OpenFlow 1.2 now supports matching on IPv6 source address,<br />destination address, protocol number, traffic class, ICMPv6 type, ICMPv6 code,<br />IPv6 neighbor discovery header fields, and IPv6 flow labels.<br />\u2022 It adds support for extensible matches. By employing a TLV structure, the<br />protocol allows far greater flexibility for the treatment of current and future<br />protocols.",
      "id": "4125492482331624059",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2016-05-31T20:14:49.944+02:00",
      "ref": "593510365086871648",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "09 June 2017 20:49",
          "html": "I did a podcast on this topic once:<br /><br />http://blog.ipspace.net/2015/06/software-defined-hardware-forwarding.html<br /><br />The idea is obviously enticing. Is it worth the extra cost? I don&#39;t know.",
          "id": "8525462469051360768",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2017-06-09T20:49:01.583+02:00",
          "ref": "4615792060571610660",
          "type": "comment"
        }
      ],
      "date": "09 June 2017 18:34",
      "html": "I would love your thoughts on Reconfigurable Match Action Table (RMT) chips and the ability to use openflow as a steering mechanism just on the edge with some controller with a global view. Lets just picture a multi-layer SDN environment where openflow is used at the edge but something like segment routing for the rest of the specific managed domain.  All of this augmented with some sort of AI platform, that takes real time information to steer traffic.  This could increase UX and resiliency assuming the ability to model the network appropriately.<br />Lets assume some SDN controller with the ability to query some ML mechanism which gets real-time telemetry from the network, and is cognizant of some level of service level objectives defined. <br /> Ingress flow matched via some defined tuple to some egress label stack augmented with SLO objectives for the flow matched could provide added resiliency, as well as better SLO management across the network.  Added benefit of using RMT chips could be to change hashing mechanisms for things like TEID, and insert new headers like NSH for perimeter devices that support NSH but not flow table entries.  Just something I was thinking as a good use case for openflow.  <br />Additionally, if one leveraged P4 programming language for the tables, it could be portable across multiple data plane elements, such as OVS using PISCES, VPP using PVPP, smartNICs assuming ICONICS, etc...",
      "id": "4615792060571610660",
      "image": "https://2.bp.blogspot.com/-rNIf2IhAAZo/TlZn7dJMr1I/AAAAAAAAAAQ/lvfFMnvSIic/s32/rommel.jpg",
      "name": "Rommel",
      "profile": "https://www.blogger.com/profile/08058207877246461887",
      "pub": "2017-06-09T18:34:57.110+02:00",
      "ref": "593510365086871648",
      "type": "comment"
    }
  ],
  "count": 8,
  "id": "593510365086871648",
  "type": "post",
  "url": "2016/05/openflow-table-type-patterns-and-vendor.html"
}