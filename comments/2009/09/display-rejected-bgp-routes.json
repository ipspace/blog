{
  "comments": [
    {
      "date": "04 September 2009 00:10",
      "html": "One way to get the command output to a convenient place for diffing might be to use the redirect filter:<br /><br />show ip bgp neighbor a.b.c.d received-routes | redirect tftp://x.x.x.x/received.txt<br />show ip bgp neighbor a.b.c.d routes | redirect tftp://x.x.x.x/routes.txt<br /><br />If you had enough flash you could actually do the diff on the router, but probably not many people are running enough flash for a whole BGP table:<br /><br />show ip bgp neighbor a.b.c.d received-routes | redirect flash://x.x.x.x/received.txt<br />show ip bgp neighbor a.b.c.d routes | redirect flash://x.x.x.x/routes.txt<br /><br />show archive config diff flash:received.txt flash:routes.txt<br /><br />I haven&#39;t tried this with BGP but it works in a quick lab test with some IGPs.",
      "id": "2305865554384249590",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "JS",
      "profile": null,
      "pub": "2009-09-04T00:10:10.000+02:00",
      "ref": "5881890895270358137",
      "type": "comment"
    },
    {
      "date": "09 September 2009 06:52",
      "html": "Here&#39;s TCL code:<br />puts -nonewline &quot;\\n\\nBGP Neighbor IP? &quot;<br />flush stdout<br />set neighbor [ gets stdin ]<br />set recv_routes [ split [ exec &quot;show ip bgp neighbor $neighbor received-routes&quot; ] &quot;\\n&quot; ]<br />set routes [ split [ exec &quot;show ip bgp neighbor $neighbor routes&quot; ] &quot;\\n&quot; ]<br /><br />set matched 0<br /><br />puts &quot;\\nThe following prefixes were received from neighbor $neighbor but not installed.\\n&quot;<br /><br />foreach recvd $recv_routes {<br />  set matched 0<br />  foreach route $routes {<br />    set test [ string compare $recvd $route ]<br />    if { $test == 0 } { set matched 1 }<br />  }<br />  if { !$matched &amp;&amp; [ regexp &quot;(\\[0-9]{1,3})\\.(\\[0-9]{1,3})\\.(\\[0-9]{1,3})\\.(\\[0-9]{1,3})&quot; $recvd ] } {<br />    puts $recvd<br />  }<br />}<br /><br />Beware line wrapping.  Here&#39;s what the output looks like:<br />R3#tclsh disk0:bgpdenied.tcl <br /><br />BGP Neighbor IP? 23.23.23.2<br /><br />The following prefixes were received from neighbor 23.23.23.2 but not installed.<br /><br />* i1.0.0.0          12.12.12.1               0    100      0 i<br />* i10.0.0.0         12.12.12.1               0    100      0 i<br /><br />R3#<br /><br />The following script can be pasted directly into tclsh from the CLI but you need to replace &lt;neighborip&gt; with the correct IP.<br />log_user 0<br />set neighbor &lt;neighborip&gt;<br />set recv_routes [ split [ exec &quot;show ip bgp neighbor $neighbor received-routes&quot; ] &quot;\\n&quot; ]<br />set routes [ split [ exec &quot;show ip bgp neighbor $neighbor routes&quot; ] &quot;\\n&quot; ]<br />set matched 0<br />foreach recvd $recv_routes {<br />  set matched 0<br />  foreach route $routes {<br />    set test [ string compare $recvd $route ]<br />    if { $test == 0 } { set matched 1 }<br />  }<br />  if { !$matched &amp;&amp; [ regexp &quot;(\\[0-9]{1,3})\\.(\\[0-9]{1,3})\\.(\\[0-9]{1,3})\\.(\\[0-9]{1,3})&quot; $recvd ] } {<br />    puts $recvd<br />  }<br />}",
      "id": "6523643064565189762",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "NWG",
      "profile": null,
      "pub": "2009-09-09T06:52:44.000+02:00",
      "ref": "5881890895270358137",
      "type": "comment"
    },
    {
      "date": "09 September 2009 07:00",
      "html": "Here&#39;s the same from pastebin for help with formatting:<br />http://pastebin.com/f60cc87d1",
      "id": "3123937716085923593",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "NWG",
      "profile": null,
      "pub": "2009-09-09T07:00:39.000+02:00",
      "ref": "5881890895270358137",
      "type": "comment"
    }
  ],
  "count": 3,
  "id": "5881890895270358137",
  "type": "post",
  "url": "2009/09/display-rejected-bgp-routes.html"
}