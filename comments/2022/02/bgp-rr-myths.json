{
   "comments": [
      {
         "comments": [
            {
               "date": "01 February 2022 06:18",
               "html": "<p>How about &quot;Without that full mesh you&rsquo;re losing redundancy.&quot; and &quot;The need for the IBGP sessions between spine switches diminishes if as the number of spine switches grows unless someone &ldquo;wisely&rdquo; decided to use only two of the spines as route reflectors&quot;</p>\n\n<p>As always, pick your poison (aka &quot;it depends&quot;), and whatever you do, make sure you know what you&#39;re doing as opposed to following PowerPoint-based &quot;best practices&quot;</p>\n",
               "id": "993",
               "name": "Ivan Pepelnjak",
               "pub": "2022-02-01T18:18:31",
               "ref": "992",
               "type": "comment"
            }
         ],
         "date": "01 February 2022 04:04",
         "html": "<p>Appreciate you sharing your insights and lessons learnt from the past.</p>\n\n<p>I think I may know where that silly notion came from, and you are right of course: One can construct a network topology in which iBGP between route reflectors is useful/required.</p>\n\n<p>However, in a topology where the route reflectors are intended as equivalent redundant options to form a full iBGP mesh, they would (normally) each have the exact same connectivity to other devices. If not, you would have snowflakes (https://blog.ipspace.net/2021/12/worth-reading-snowflake-network-devices.html). This is especially true for a cluster of &#39;pure&#39; route reflectors that only do control plane and no packet forwarding.</p>\n\n<p>So: Do we need iBGP sessions between truly equivalent, fully connected route reflectors?</p>\n",
         "id": "992",
         "name": " Jeroen van Bemmel",
         "pub": "2022-02-01T16:04:42",
         "type": "comment"
      }
   ],
   "count": 1,
   "type": "post",
   "url": "2022/02/bgp-rr-myths.html"
}
