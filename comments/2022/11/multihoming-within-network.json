{
   "comments": [
      {
         "date": "17 November 2022 04:14",
         "html": "<p>Thank you!</p>\n",
         "id": "1517",
         "name": "BOGDAN GOLAB",
         "pub": "2022-11-17T16:14:36",
         "type": "comment"
      },
      {
         "date": "17 November 2022 02:01",
         "html": "<p>I am interested to see if HIP fixes all of this in the future. It looks like it has the potential to be a well-designed solution. It doesn&#39;t meet your &quot;widely-deployed&quot; criteria yet but it looks promising and it doesn&#39;t feel hackish.</p>\n",
         "id": "1516",
         "name": " Octavio",
         "pub": "2022-11-17T14:01:28",
         "type": "comment"
      },
      {
         "comments": [
            {
               "date": "18 November 2022 11:38",
               "html": "<p>Welcome back! I expected a comment from you ;)</p>\n\n<p>Your comment prompted me to summarize the point of the blog post into a simple TL&amp;DR which is then followed by the analysis of all potential solution architectures I can see and what their applications are. I can&#39;t see how your comment addresses any of those, if I missed anything please point it out.</p>\n\n<p>As for...</p>\n\n<p>&gt; &quot;(according to RINA) build an overlay network with global host addresses on top of that?&quot;\n&gt;\n&gt; I&#39;m not an expert on RINA, but nowhere have I read that&#39;s what RINA proposes: definitely not host address in the routing table. Can you show me where it&#39;s written?</p>\n\n<p>I did not claim that. I said RINA proposes to solve every challenge by adding another layer, finishing with host addresses on the top layer. I might be wrong about that, but that was the only high-level summary I could get from all the materials you sent me. I just pointed out the implications of that approach.</p>\n\n<p>As for...</p>\n\n<p>&gt; Why? What&#39;s the point of summarization then? The point of addressing that&#39;s pushed forward by John Day, father of RINA, which I agree with, is an address should be route-independent.</p>\n\n<p>... I pointed the implications of various approaches. If you feel my conclusions are wrong please point out where I went wrong.</p>\n",
               "id": "1522",
               "name": " Ivan Pepelnjak",
               "pub": "2022-11-18T11:38:25",
               "ref": "1518",
               "type": "comment"
            },
            {
               "date": "19 November 2022 05:03",
               "html": "Thx for the warm welcome Ivan : ) ! First, let me say that we greatly agree on LISP&#39;s and MP-TCP&#39;s (and SCTP for that matter) shortcomings.<br />\n\n<p>Re RINA, it essentially is a network model, like the OSI. Because of that, it can make use of IP as its addressing scheme no problem. So RINA and IP are not mutually exclusive.</p>\n\n<p>RINA proposes a self-similar network model, making use of one layer, and repeating it as many times as the network engineer needs, so there&#39;s no fixed number of layers. For simple networks, 3 should suffice most of the time, but as you need more, you can span more. So it&#39;s dynamic and recursive.</p>\n\n<p>Russ White is a proponent of RINA himself, and he too recognizes that OSI is missing a layer, here (in the We are missing a layer section):</p>\n\n<p>http://rule11.tech/reaction-really-need-new-internet/</p>\n\n<p>Russ misunderstood that RINA implies a fixed number of layers, and an even number, which were corrected in the comment section. </p>\n\n<p>So no, RINA doesn&#39;t propose to solve the problem by adding another layer, I hope that much is clear by now.</p>\n\n<p>Back to the example in the blog, if PI addresses are used, then multihoming is solved quite easily. A and B (the host) just do DNS to get the node address of Server, and forward their packets to ISP A or B, which then have the Server IP Block (summary) entry with interface pointing to either ISP C and D, which then end up at Server. And because TCP now uses node address, not interface address, an interface going down won&#39;t trigger session reset. That&#39;s light weight.</p>\n\n<p>Now if Provider-based address are used, then Server would have 2 node addresses. Say A makes a DNS query for Server. That would return one of the 2 node addresses, and A will pick one and pick an interface to send it to Server, either via ISP A or B -- Akamai uses this 2-level approach, hence my mentioning of them. So if the interface to either ISP A or B goes down midsession, as long as A or B knows the route to the existing node address of Server, session won&#39;t reset. Providers can negotiate that. Worst case scenarios, if they don&#39;t want to negotiate anything, session resets. But the point is, it then becomes a non-technical issue, not a fundamental one. And nowhere do I see state explosion.</p>\n\n<p>So as I see it, multihoming can be solved using the network with a 2 level addressing structure, much like the IP-MAC pair in existing network, with DNS name mapped to IP, not to MAC, so MAC change doesn&#39;t cause IP session reset. </p>\n\n<p>Plus, it has the added bonus of simplifying things, reduces the size of global RIB, and removes the tight-coupling which can lead to global synchronized collapse. </p>\n",
               "id": "1527",
               "name": " Minh",
               "pub": "2022-11-19T05:03:21",
               "ref": "1522",
               "type": "comment"
            }
         ],
         "date": "18 November 2022 08:58",
         "html": "<p>&quot;(according to RINA) build an overlay network with global host addresses on top of that?&quot;</p>\n\n<p>I&#39;m not an expert on RINA, but nowhere have I read that&#39;s what RINA proposes: definitely not host address in the routing table. Can you show me where it&#39;s written? </p>\n\n<p>&quot;Under that scenario, host would be known only by its node address (H). Everyone between the bifurcation point (IXP) and the host needs to know that there are two paths toward the host, and what their state is. That includes ISP-A, ISP-B, and all upstream ISPs including upstream ISPs directly connected to IXP2.&quot;</p>\n\n<p>Why? What&#39;s the point of summarization then? The point of addressing that&#39;s pushed forward by John Day, father of RINA, which I agree with, is an address should be route-independent. Summarization done with hierarchical addressing can even bound the number of routes in the Internet RIB. With current interface addressing BS, the global RIB is about a million routes and counting. Why does it keep rising? Because it has no boundary condition imposed. Why are network engineers called engineers when they have no understanding of boundary conditions, a fundamental aspect in engineering? </p>\n\n<p>Akamai uses 2-level DNS to implement their infrastructure; it&#39;s the same concept as hierarchical addressing, and it works for them. Now coming back to the example, ISP A and B just needs the summary routes of whatever blocks C and D possess, and on and on it goes. How should this fail to work?</p>\n\n<p>Also, in our discussion of the same topic way earlier, you pointed out that money is an incentive, no ISP can make money if hierarchical addressing is used. Fair enough. But the next question is, since money ruins a lot of things in life (IT is no exception), is money the right question to ask? When something is considered national security or national asset too valuable to fall into private hands with dubious interests, like the main grid or the oil-gas pipelines, govts will be responsible for building and managing it. Why is communication infrastructure any different? Isn&#39;t it part of national critical infrastructure these days? Why give it to private hands when they can potentially sell out to your enemies? </p>\n\n<p>Back to the global RIB, we have tight-coupling and complexity-collapse problem. Just because it hasn&#39;t happened yet (or it might have) doesn&#39;t mean it won&#39;t. The same way the financial idiots keep claiming that derivatives are all well and good, until they blew up in their faces and were so close to bringing down the whole financial system in 97-98 and 2008; even now the global financial system is fucked up in more ways than one; just a looming failure of Credit Suisse risks bringing down the whole shebang. Global tight-coupling complexity surely is a good thing. </p>\n\n<p>IPv6 helps make things worse, and way worse for those who know hardware. So while &#39;worst decision ever&#39; is debatable, it&#39;s pretty up there among the very bad ones. CLNP recognizes the need for hierarchy in addressing, that&#39;s what we can learn from. Should we go back to it? Hell no. IPv4 is simple, and everything simple is good. Start with this simplicity, and improve it. Funny the MPLS guys got it right by accident; they unconsciously implemented hierarchical addressing with MPLS VPN; it worked.  </p>\n\n<p>Another point that you mention somewhere is: depending on the scenarios, at worst you might end up with millions of routes in the local network, in exchange for a clean, short global RIB. I don&#39;t think that&#39;s the case if you implement the hierarchical addressing the right way, but let&#39;s just assume this is the case, is it that terrible? The blast radius is contained within the network. OTOH, a global RIB with millions of routes has the potential to result in massive errors that can bring down the whole or a large part of the Internet. Containment vs contagion: a clear win to me. </p>\n\n<p>Looks like John Day is demonized as an anti-IP guy. He&#39;s not. Just because he invented RINA, doesn&#39;t mean he&#39;s gone nuts about it; that&#39;s what I like about him: common sense and simplicity. His views on addressing and multihoming are here for anyone with an open mind:</p>\n\n<p>https://pouzinsociety.org/sites/default/files/LocIDSplit090309.pdf</p>\n\n<p>https://psoc.i2cat.net/sites/default/files/PSOC-tutorials-naming-addressing.pdf?_ga=2.82479954.572590943.1668752621-682182543.1668752621</p>\n\n<p>https://psoc.i2cat.net/sites/default/files/PSOC-tutorial-Mobility-made-simple.pdf?_ga=2.219319261.572590943.1668752621-682182543.1668752621</p>\n\n<p>As for complaint on why his book wasn&#39;t written from an engineering perspective, well, he already stated that in the book and made clear in the title of the book for those with subtlety. He tried to propose an alternative model of networking based on his decades of experience (no, he&#39;s not just an armchair expert in academia), and that hierarchical model works well when applied to IP. </p>\n\n<p>MP-TCP and SCMP are just lipstick on a pig. A typical result of adding more complexity to solve complexity, and still failing to solve it, when the fundamentals are wrong. </p>\n",
         "id": "1518",
         "name": " Minh",
         "pub": "2022-11-18T08:58:59",
         "type": "comment"
      },
      {
         "comments": [
            {
               "date": "18 November 2022 11:40",
               "html": "<p>Thank you! Maybe I should use &quot;O-LISP&quot; for &quot;Original LISP&quot; ;)</p>\n\n<p>I totally agree that properly fine-tuned LISP is useful, and I&#39;m glad to hear you&#39;re pushing it forwarding. I guess we can also agree that LISP is not a solution to global host multihoming the way it was claimed to be.</p>\n",
               "id": "1523",
               "name": "Ivan Pepelnjak",
               "pub": "2022-11-18T11:40:16",
               "ref": "1519",
               "type": "comment"
            }
         ],
         "date": "18 November 2022 10:23",
         "html": "<p>Real life commercially implemented LISP is different. It is using reliable transport and PubSub. Then it has no cache problem. The convergence is usually much faster than with other routing protocols.\nThe size of the EID table is a matter of capacity planning and memory profiles. Here there is something to do. Aggregation could help.\nA hybridization of the push vs. pull model would be available by selective PubSub subscription. This is not implemented commercially yet, but we are pushing for this. :-)\nWe have just finished a large validation exercise successfully in a consortia of 10 big companies for using a specially profiled version of LISP called Ground Based LISP (GB-LISP) for multilink mobility in aviation networks. It uses a special protocol on the air-ground link. GB-LISP is limited to integrate radio access networks and ground users in the ground networks. This will be further improved to fulfill all the strict requirements for a safety critical application. Now it is under codification as one of the recommended implementations for upcoming ICAO and EUROCA/RTCA standards.\nThe major IETF LISP RFCs have been recently updated from Experimental to Standards Track. This is driven by finding new use cases that are better than the original ideas. Another two rounds of IETF LISP standardizations are foreseen...</p>\n",
         "id": "1519",
         "name": "Bela Varkonyi",
         "pub": "2022-11-18T10:23:58",
         "type": "comment"
      },
      {
         "comments": [
            {
               "date": "18 November 2022 11:42",
               "html": "<p>You&#39;re comparing apples and cheeseburgers. Phone number portability is really a DNS function (and we both know how convoluted call setups can be).</p>\n\n<p>It&#39;s easier to solve some things (like number portability) if you have multiple name spaces, and you don&#39;t have to involve all of them in fast path.</p>\n\n<p>Anyway, I should have been more precise: you cannot solve host multihoming <em>within the network layer</em>.</p>\n",
               "id": "1524",
               "name": "Ivan Pepelnjak",
               "pub": "2022-11-18T11:42:45",
               "ref": "1520",
               "type": "comment"
            },
            {
               "date": "18 November 2022 07:11",
               "html": "<p>I had a vague feeling we&#39;d had this discussion before :) Here&#39;s the blog post I wrote at that time:</p>\n\n<p>https://blog.ipspace.net/2022/04/telephone-system-hierarchical-addresses.html</p>\n",
               "id": "1526",
               "name": "Ivan Pepelnjak",
               "pub": "2022-11-18T19:11:13",
               "ref": "1524",
               "type": "comment"
            }
         ],
         "date": "18 November 2022 10:40",
         "html": "<p>Actually, the telephony network, including mobiles, is already upgraded for a ID vs. location separation. This is called number portability and enforced by laws and regulation, so you have no freedom to ignore it or go any other ways.\nIt works with large portability databases for millions or even hundred millions of users. Of course, this is specially designed for this challenge and costly. But it still has a positive business case at the end.\nSo if those old telcos can solve similar problems, then why do you think it is not possible to solve it for IP networks with a similar scheme? I know the devil is the details, but not all services have the same continuity requirements. Most of the services can tolerate some drops and some delays to make an address resolution. \nFor highly demanding services, of course, you need other methods. But this is a small minority only. That is where we promote a selective simulcast solution.\nI agree that the best to do such simulcast at the application layer. Our company was a driver behind the radio voice linked session EUROCAE standards. This is a double simulcast between the voice application components. It is also needed for having a maximum independence of the two alternate network paths. \nOur company has also pushed forward the simulcast scheme for surveillance information. This is now used all over the air traffic control domain for radar sensor data with up 4-times redundancy. \nSince simulcast is costly, especially in the narrowband safety critical networks, simulcast should be selective by application or traffic class on limited radio links. You would apply it only when it is absolutely needed. Otherwise, you would just do failover at certain speed as required.\nBy the way, the latest UAS standards promote that the link failover decision is at the hand of the remote pilot. We are now fighting with this. since uncoordinated path selection could make congestion even worse...</p>\n",
         "id": "1520",
         "name": "Bela Varkonyi",
         "pub": "2022-11-18T10:40:20",
         "type": "comment"
      },
      {
         "comments": [
            {
               "date": "18 November 2022 11:44",
               "html": "<p>Thanks for pointing this out -- I got a pointer from someone about a deployed BT solution a long while ago, and still haven&#39;t found time to blog about it.</p>\n\n<p>If you&#39;re using something similar to what BT is doing, then you have a pair of MP-TCP proxies, effectively reinventing ML-PPP (or SD-WAN).</p>\n\n<p>Am I missing something? Do you have a more interesting setup?</p>\n",
               "id": "1525",
               "name": "Ivan Pepelnjak",
               "pub": "2022-11-18T11:44:35",
               "ref": "1521",
               "type": "comment"
            }
         ],
         "date": "18 November 2022 11:07",
         "html": "<p>I am just using MP-TCP for my Internet connection. As millions and millions of users. But not at the application layers, rather as an underlay transmission solution. What IP guys tend to forget, that a real network is a hierarchy of a large number of transport layers. Not the OSI model. That has nothing to do with real wide area networks. People should study the ITU-T G.800 series. That is where real networks are properly modeled. We have a cultural problem here, denial of telco know-how...</p>\n\n<p>As soon as you have multiple transmission layers, you have more than just one ID and location separation. Actually, you have a number of addresses to be mapped together, more than two. Like in an MPLS stack those multiple labels on top of each other. This is daily business for telcos for ages and they know how to do it.</p>\n\n<p>On the other hand telcos are using SCTP for ages inside their infrastructure. Because they could use software specifically designed for SCTP, they do not need backward compatibility to socket APIs. And it works well for high-availability and &quot;multi-homing&quot;.</p>\n\n<p>This multi-homing is a problem only if you are limited to old enterprise feature sets on your devices. It is also not taught in most courses how to design high-availability networks... :-)</p>\n\n<p>In many cases, you cannot change your end systems, they are not able to support multi-homing directly, and then you shift the problem to the network if feasible. If you put a multiple attached proxy in front of such a legacy device, then you can achieve a very good availability, since the local link, that is a single point of failure, might be good enough in reliability. Virtual IP addresses are also used quite successfully in such scenarios. </p>\n\n<p>Another simple solution used in safety critical networks is to use multiple end user devices with the same functionality. Then if you have an operational issues, you just move to the next workstation. This is the ultimate high-availability, but of course with some cost.</p>\n\n<p>I am a big fan of the &quot;design to cost&quot; and a risk management approach in engineering. For each cost level you might need different architectures. There is no single solution for everything. We need diversity as well. This also fundamental for safety. It is needed from the business perspective for leveraging you negotiation opportunities...</p>\n",
         "id": "1521",
         "name": "Bela Varkonyi",
         "pub": "2022-11-18T11:07:49",
         "type": "comment"
      }
   ],
   "count": 6,
   "type": "post",
   "url": "2022/11/multihoming-within-network.html"
}
