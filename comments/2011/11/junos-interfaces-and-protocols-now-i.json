{
  "comments": [
    {
      "date": "23 November 2011 11:16",
      "html": "Absolutely. Fixed. Thank you!",
      "id": "5290699327043008171",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Ivan Pepelnjak",
      "profile": null,
      "pub": "2011-11-23T11:16:48.305+01:00",
      "ref": "2646163608612794225",
      "type": "comment"
    },
    {
      "date": "25 November 2011 11:52",
      "html": "The glow is in the segmentation... for non webUI users this programming-like syntax is where some of the magic lies in.<br /><br />Wait until you get to firewalls, policy-statements :)<br /><br />Also, I think that your remarks regarding error messaging and/or junos documentation are not totally fair. JunOS documentation (depends what you are reading) actually tell you (it&#39;s junos basics) that at interface level you have to enable &#39;things&#39; that you want the interfaces to understand (like packet headers, therefore families). Once you know that everything works with this mindset it is really just a matter of knowing some basic troubleshooting commands like:<br /><br />show &lt;protocol&gt; interfaces/adjacency/summary<br /><br />One bit that might confusing (coming from IOS) is the rsvp vs mpls (what goes where), checking routing tables (since you now have all the inet.&#39;s and mpls.&#39;s.<br /><br />Anyway... has been a fun ride since I embraced both and I clearly have a preference. &lt;/protocol&gt;",
      "id": "5912157430555828623",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Rodrigo",
      "profile": null,
      "pub": "2011-11-25T11:52:55.045+01:00",
      "ref": "2646163608612794225",
      "type": "comment"
    }
  ],
  "count": 2,
  "id": "2646163608612794225",
  "type": "post",
  "url": "2011/11/junos-interfaces-and-protocols-now-i.html"
}