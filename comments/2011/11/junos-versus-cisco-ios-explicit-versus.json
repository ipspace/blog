{
  "comments": [
    {
      "date": "18 November 2011 08:51",
      "html": "There are two sensible ways to ease the fun.<br /><br />First, you can create an apply-group that sets family iso, family mpls and family ipv6 (and bumps the MTU as well for that matter) so you only have to set an IPv4 address and the rest comes along for the ride. Other things work as well, like firewall filters. I use this on the EX platforms to make it easy to group non-contiguous ports hosting VM clusters to ensure they all get the same VLAN&#39;s. This could be applied per-interface (eg, have BACKBONE &amp; ACCESS, each applying different policy) or globally at a higher level.<br /><br />Second, under protocols there&#39;s a trick that works for mpls (at least, never cared to try it anywhere else), just set &quot;interface all&quot;, and (on the bigger boxes) &quot;interface fxp0 disable&quot; (to cover the management interface).<br /><br />If you&#39;ve got friends at large Juniper-using carriers see if you can have them show off their configs, it&#39;s the automation inside JunOS that makes many of these networks scale without full global config automation.",
      "id": "5151321750693473324",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Julien Goodwin",
      "profile": null,
      "pub": "2011-11-18T08:51:16.482+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "18 November 2011 08:56",
      "html": "Well the other side is that you can include configuration statements (say for a future line card) and you could build all &quot;fake&quot; interface configurations and syntax-check you configuration with &quot;Commit check&quot;.<br /><br />Now when you plan a maintenance-window you can install the line card, and now commit the configuration you just made and everything will be up and running. <br /><br />I do agree with you that *some* warnings would be nice. I recently uploaded a configuration to a JUNOS device and it had the wrong name for the management interface (me0 instead of fxp0) and that means that after applying the configuration i had no access to the device...",
      "id": "4609335298655833864",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Guest",
      "profile": null,
      "pub": "2011-11-18T08:56:22.051+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "18 November 2011 17:22",
      "html": "wish i have Junosphere to play with, tried few example on olive. <br />I kind like this cli layout, i think even ios-xr is copy junos in many aspect.",
      "id": "7944677531524392945",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "igp2bgp",
      "profile": null,
      "pub": "2011-11-18T17:22:56.944+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "18 November 2011 17:56",
      "html": "Thank you! Will definitely try the apply-groups. I discovered &quot;interface all&quot; but that&#39;s applicable primarily on core routers; if you have two groups of interfaces (PE-CE and PE-P), it doesn&#39;t help.",
      "id": "3400477017966724555",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Ivan Pepelnjak",
      "profile": null,
      "pub": "2011-11-18T17:56:45.248+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "18 November 2011 21:02",
      "html": "It&#39;s also very easy to copy or move configuration from one interface to another.",
      "id": "5765286088071651382",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2011-11-18T21:02:02.238+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "18 November 2011 21:02",
      "html": "I&#39;m almost surprised it doesn&#39;t warn at all if you have specified, for example, ge-0/0/0 under protocols ldp, that ge-0/0/0 doesnt have family mpls on it. Especially because, for example, with switching if you have an interface configured under the VLAN, it will warn you (and not commit) if you don&#39;t have family ethernet-switching on the interface.<br /><br />You will notice as you do more and more work with Junos how logical everything is. Cisco&#39;s way of doing things is just throwing configs wherever. With Junos you have interface config under interfaces{} and protocol config under protocols {} and vlan configuration under vlan{}. <br /><br />Configuring anything to do with ldp under an interface makes no sense because it&#39;s not an interface-related parameter. Specifying what interfaces to run ldp on under the protocols ldp{} hierarchy is very logical. <br /><br />It may seem odd that you have to configure the interface for family mpls, but you have to look at it this way: you&#39;re not configuring mpls or ldp on that interface, you&#39;re just specifying the ethertype accepted (which is logically an interface-related configuration).<br /><br />So you&#39;re not really configuring anything twice here. The interface config specifies ethertypes to accept, the protocol config specifies what interfaces to run LDP on. Mutually exclusive.<br /><br />Like I mentioned on Twitter, learning Junos really requires you to take a step back and kind of forget everything you learned about IOS and all the IOS-like clones on the market. It&#39;s a whole new world, and you&#39;ll drive yourself crazy trying to make direct comparisons between the two philosophies. I know you don&#39;t feel this is useful advice, but once you accept it you will understand. I used to drink the Cisco kool-aid too, after all. <br /><br />If you need any help feel free to reach out.",
      "id": "9221054869389669369",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Chris Jones",
      "profile": null,
      "pub": "2011-11-18T21:02:17.332+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "18 November 2011 21:11",
      "html": "Interesting about your take on EX. Are you not a fan of interface-range?",
      "id": "4921530638189793091",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Chris Jones",
      "profile": null,
      "pub": "2011-11-18T21:11:18.982+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "18 November 2011 21:14",
      "html": "&gt; Seriously, while I understand why Junos does things the way it does, Juniper could add a few error messages along the lines of \u201cinterface configured but lacks address family\u201d.<br /><br />You can define your own warning or errors at commit via commit scripts.  It would be an easy script to check isis defined interfaces and make sure iso is configured (or warn on iso family&#39;ed interfaces that are lacking isis config)<br /><br />If you do &#39;set protocols isis interface all&#39; it will only apply to interfaces that have iso enabled. <br /><br />Same goes for mpls and ldp.  If you don&#39;t want to run ldp to a customer there are a couple of points.  Unless you are doing Carrier-supporting-carrier you don&#39;t need MPLS on a customer facing port.  If you are dong CSC and don&#39;t want to run ldp on a interface on an interface with &#39;family mpls&#39; enabled on it you can do the follwoing<br /><br />set protocols ldp interface all<br />set protocols ldp interface ge-0/0/0.0 disable<br /><br />I think it was a design decision to allow some &quot;non-valid&quot; configs and allow the user to define their own rules and not let the parser get in the way although a warning I guess would not hurt.",
      "id": "2832725375825312065",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Brandon Bennett",
      "profile": null,
      "pub": "2011-11-18T21:14:21.692+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "18 November 2011 21:22",
      "html": "Yea I recommend you also look at the interface-range object under the interfaces heirarchy. It allows you to create a single config for a group of like interfaces. This comes in handy especially with aggregation configuration. Why configure 6 interfaces when you can configure just a single one. Makes you config much more tidy as well.",
      "id": "2994057584271601468",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Robert Juric",
      "profile": null,
      "pub": "2011-11-18T21:22:38.994+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "18 November 2011 23:44",
      "html": "I think that JUNOS should eliminate all the &quot;family ...&quot; statements from configurations and leave them just for the purpose of setting addresses (IPv4, IPv6, iso).<br />Does it make any sense to have interfaces that by default accept only IPv4 packets ? I do not see any reason (or at least any more reason). Why should I enable an interface for instance to accept MPLS or IPv6 or ISO packets ? Ethertypes (or PPP protocol types) are not enough ?<br />Anyway, comparing IOS and JUNOS is not an esay task. I have been working with both of them for a long time and believe me, there are good things in both of them. For instance, I like much more JUNOS configuration style for routing protocols, BGP and MPLS related stuff. But, have you ever tried to configure QoS in JUNOS ? Or NAT ? Very clumsy !!! Much easier and neater in IOS.",
      "id": "5548396295920689148",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Tiziano",
      "profile": null,
      "pub": "2011-11-18T23:44:12.020+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "18 November 2011 23:57",
      "html": "I actually find CoS to be much easier on Junos. The IOS way is just kludgy, especially on something like the 6500. <br /><br />I don&#39;t agree with eliminating the family statements. They make a lot of sense, especially when you look at an interface configuration that has multiple families on it.",
      "id": "3396908631594578706",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Chris Jones",
      "profile": null,
      "pub": "2011-11-18T23:57:06.244+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "18 November 2011 23:59",
      "html": "As far as QoS/CoS on IOS.  What platform are we talking about :)  Since the configuration different on about every switch in existence.<br /><br />Junos may be more verbose in the configuration but I wouldn&#39;t say clumsy.",
      "id": "6771837770912189349",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Brandon Bennett",
      "profile": null,
      "pub": "2011-11-18T23:59:28.918+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "19 November 2011 00:02",
      "html": "Ivan,<br /><br />Also keep in mind that unless you put SOMETHING on an interface, it&#39;s not even active.<br /><br />Eg if you have nothing under interfaces ge-0/0/0, then ge-0/0/0 doesn&#39;t even show up in your config. <br /><br />So no matter what, you&#39;d have to do something under the interface, so it&#39;s one line whether you add family mpls or not. just like in Cisco where you have to do a &quot;no shut&quot;. Its one additional command in either OS ;)<br /><br />Just trying to add some additional perspective ;)",
      "id": "5557777766456272153",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Chris Jones",
      "profile": null,
      "pub": "2011-11-19T00:02:51.784+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "19 November 2011 00:05",
      "html": "@Brandonrbennett that&#39;s my thought. On the routers, it&#39;s not bad. On most switches, it&#39;s awful. <br /><br />Junos may have more pieces to the puzzle, but honestly I didn&#39;t fully understand what I was doing with QoS/CoS until I did it on Juniper. You really need to understand how your queues and schedulers work. I guess that could be considered a shortfall, requiring the engineer to know what they&#39;re doing ;)",
      "id": "3276899069758149076",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Chris Jones",
      "profile": null,
      "pub": "2011-11-19T00:05:51.529+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "19 November 2011 00:08",
      "html": "It also helps when you need multiple ranges for various purposes. Eg a range called &quot;VLAN_100_PORTS&quot; made up of ge-0/0/0 - 24, and then a range called &quot;DOT1X_PORTS&quot; made up of ge-0/0/5 thru ge-0/0/10. Just an example of the flexibility. <br /><br />apply-groups have their place, but definitely not a replacement for interface-range",
      "id": "2660876430066762920",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Chris Jones",
      "profile": null,
      "pub": "2011-11-19T00:08:33.340+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "19 November 2011 01:35",
      "html": "One must love both &quot;replace pattern&quot; and &quot;rename&quot; commands!<br /><br />-- @miketomato",
      "id": "8516260590361157953",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Rafael de Oliveira Ribeiro",
      "profile": null,
      "pub": "2011-11-19T01:35:11.349+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "19 November 2011 08:30",
      "html": "I was referring to IOS MQC, that in my opinion is much easier and well organized, based on the simple concept of decoupling classification from QoS policies.Obvously, this is a very subjective opinion !<br />Concerning &quot;family ...&quot; statements, as many people, for historical reasons, before working with JUNOS I have worked on IOS, where interfaces can implicitly accept any type of packet, without specifying any address family, and to telll truth I never realized the need to have a command of the type &quot;family ...&quot; as in JUNOS.<br />Anyway, as a global opinion, I prefer to work with JUNOS, more rational and neat.",
      "id": "8088409228904351197",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Tiziano",
      "profile": null,
      "pub": "2011-11-19T08:30:23.051+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "14 August 2012 00:30",
      "html": "It&#39;s quite straighforward...<br />IOS is the general purpose with intelligent defaults of the network operating systems world. It works OK for quite a lot of folks, a bit like a popular desktop operating system I could mention. Junos otoh is a *nix of network operating systems, you&#39;ve got to understand what you&#39;re trying to achieve, and understand the the underlying standards and semantics. Both have their place and are useful, but I prefer the latter ;-)",
      "id": "105139527499323805",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Dariush",
      "profile": null,
      "pub": "2012-08-14T00:30:03.271+02:00",
      "ref": "846243054390949845",
      "type": "comment"
    },
    {
      "date": "31 March 2019 01:49",
      "html": "Guys, I have started working on Junos ecently and noticed that it has lot of configuration statements which are not required and could make life easy if removed from the CLI. I noticed that Juniper has one of the most complex VLAN tagging implementation. For example, looking at &quot;encapsulation flexible ethernet service&quot; propmted me to think of some kind of tunnel protocol like GRE or VXLAN etc. but in reality it only enables L2 and L3 services on the same interface. In cisco you don&#39;t have to do this &quot;enacpsulation dot1q&quot; or service instance takes care of the issue. I also noticed that Junos QOS is more confusing and complicated than cisco IOS-XR specially, the rewire rules which override everything that you have identified using classifier. On top of all this , Juniper documentation is extremely poor and very limited.",
      "id": "3572470556232380904",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Suresh",
      "profile": "https://www.blogger.com/profile/01117109790605923981",
      "pub": "2019-03-31T01:49:22.927+01:00",
      "ref": "846243054390949845",
      "type": "comment"
    }
  ],
  "count": 19,
  "id": "846243054390949845",
  "type": "post",
  "url": "2011/11/junos-versus-cisco-ios-explicit-versus.html"
}