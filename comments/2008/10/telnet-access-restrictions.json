{
  "comments": [
    {
      "date": "25 October 2008 11:22",
      "html": "Sorry for stupid question: why \"minimum TTL\"? I believe it should be \"maximum TTL\" = 255 (as specified in RFC5082, Generalized TTL Security Mechanism). <BR/>But if I'm not mistaken, GTSM support is optional, so the router isn't *required* to set TTL=255 in originating packets (the only exception is IPv6 Neighbor Discovery). So I couldn't call this method 'reliable' enough.<BR/><BR/>SY, Jen",
      "id": "1058129553530148287",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Unknown",
      "profile": "https://www.blogger.com/profile/11002470523340238787",
      "pub": "2008-10-25T11:22:00.000+02:00",
      "ref": "7800861358358585138",
      "type": "comment"
    },
    {
      "date": "25 October 2008 17:41",
      "html": "Hi Ivan, be 'testing' - do you mean you've tested <BR/>the option of TTL in ACL, something like this ? :<BR/>ip access-list ext VTY_ACCESS<BR/>permit ip any any ttl eq 2<BR/><BR/>.. and it didnt work ?",
      "id": "5681100216780308658",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Unknown",
      "profile": "https://www.blogger.com/profile/13224038681747298745",
      "pub": "2008-10-25T17:41:00.000+02:00",
      "ref": "7800861358358585138",
      "type": "comment"
    },
    {
      "date": "25 October 2008 18:17",
      "html": "@Jen: the idea was that you would match incoming TTL of the packets with the known TTL of the telnet packets generated by IOS. Of course, if the initial TTL used by IOS is not 255, you are still open to attacks, but I didn't get that far as I could not filter on TTL values.<BR/><BR/>@Yuri: that's approximately what I was testing. Matching TTL in the interface access-list probably works, but when used in VTY access-class it did not work for me.",
      "id": "571750854511683758",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Ivan Pepelnjak",
      "profile": "https://www.blogger.com/profile/13457151406311272386",
      "pub": "2008-10-25T18:17:00.000+02:00",
      "ref": "7800861358358585138",
      "type": "comment"
    },
    {
      "date": "26 October 2008 15:08",
      "html": "I found this quite interesting so I lab&#39;ed it up as well to examine the behaviors. However, I observed a different behavior and it appeared though that the ACL seemed to work under the vty line but something else didn&#39;t work (more on that at the end). <BR/><BR/>I was using IOS 12.4(15)T5 and had the following config in my router initially:<BR/><BR/>ip access-list extended ttl<BR/> permit ip any any ttl eq 255 log<BR/> permit ip any any ttl eq 254 log<BR/> permit ip any any ttl eq 253 log<BR/> permit ip any any ttl eq 252 log<BR/> permit ip any any ttl eq 2 log<BR/> permit ip any any ttl eq 1 log<BR/> permit ip any any ttl eq 0 log<BR/> permit ip any any ttl lt 255 log<BR/>!<BR/>line vty 0 4<BR/> access-class ttl in<BR/>!<BR/><BR/>Next I telnet&#39;ed to this router from another router on the same LAN and successfully opened a telnet session. Syslog showed the following matches on the first line (ttl was = 255 coming from my other router):<BR/><BR/>Home-Rtr#sh access-lists ttl<BR/>Extended IP access list ttl<BR/>    10 permit ip any any ttl eq 255 log (12 matches)<BR/>    20 permit ip any any ttl eq 254 log<BR/>    30 permit ip any any ttl eq 253 log<BR/>    40 permit ip any any ttl eq 252 log<BR/>    50 permit ip any any ttl eq 2 log<BR/>    60 permit ip any any ttl eq 1 log<BR/>    70 permit ip any any ttl eq 0 log<BR/>    80 permit ip any any ttl lt 255 log<BR/><BR/>Oct 26 09:01:10: %SEC-6-IPACCESSLOGP: list ttl permitted tcp 10.1.1.5(1375) -&gt; 0.0.0.0(23), 1 packet<BR/><BR/>I then reworked my ACL entries by putting a deny:<BR/><BR/>ip access-list extended ttl<BR/> deny   ip any any ttl eq 254 log<BR/> deny   ip any any ttl eq 255 log<BR/> permit ip any any ttl eq 253 log<BR/> permit ip any any ttl eq 252 log<BR/> permit ip any any ttl eq 2 log<BR/> permit ip any any ttl eq 1 log<BR/> permit ip any any ttl eq 0 log<BR/> permit ip any any ttl lt 255 log<BR/>!<BR/><BR/>When I tried to telnet again I got denied. Syslog showed the following:<BR/><BR/>Extended IP access list ttl<BR/>    2 deny ip any any ttl eq 254 log<BR/>    3 deny ip any any ttl eq 255 log (3 matches)<BR/>    30 permit ip any any ttl eq 253 log<BR/><BR/>Oct 26 09:06:23: %SEC-6-IPACCESSLOGP: list ttl denied tcp 10.1.1.5(1383) -&gt; 0.0.0.0(23), 1 packet<BR/><BR/>If my test setup was correct then the ACL under the VTY lines was appeared to be working. However, I do have a question:<BR/><BR/> * How can one initiate a telnet session from a router with a TTL of, says, 2?<BR/><BR/>I have looked at various options available in the latest IOS and could not find a way to initiate a telnet session with a custom TTL value. In other words...for that reader to be able to log into his/her router from another locally connected router, he/she must find a way to initiate a telnet with a customized TTL setting.<BR/><BR/>William",
      "id": "3687345476145502269",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2008-10-26T15:08:00.000+01:00",
      "ref": "7800861358358585138",
      "type": "comment"
    },
    {
      "date": "26 October 2008 20:21",
      "html": "Using either your configuration or this one ...<BR/><BR/>ip access-list extended TTL<BR/> permit tcp any any eq telnet ttl eq 253 log<BR/> permit tcp any any eq telnet ttl eq 254 log<BR/> permit tcp any any eq telnet ttl eq 255 log<BR/> permit tcp any any eq telnet log<BR/>!<BR/>line vty 0 4<BR/> access-class TTL in<BR/><BR/>... on C3725-ADVIPSERVICESK9-M, Version 12.4(15)T5, I always get hits on the line with TTL EQ 255 regardless of the actual TTL. For example, if I open a telnet session from a router two hops away, TTL should drop to 253 and a different line in the ACL should match. So it's (in my opinion) still not working.",
      "id": "3184436350390060919",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Ivan Pepelnjak",
      "profile": "https://www.blogger.com/profile/13457151406311272386",
      "pub": "2008-10-26T20:21:00.000+01:00",
      "ref": "7800861358358585138",
      "type": "comment"
    },
    {
      "date": "27 October 2008 05:06",
      "html": "A very interesting discovery, Ivan. I was testing from another router directly attached to the testing router so I was looking for TTL=255 all the way. With your discovery I then tried matching on dscp or tos value but saw no hit on the ACL under the vty lines. Sniffer showed the proper DSCP or TOS marking coming in but debug on the router didn't show anything obvious as to why telnet was rejected. Very strange behaviors.",
      "id": "3575809181849908472",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2008-10-27T05:06:00.000+01:00",
      "ref": "7800861358358585138",
      "type": "comment"
    },
    {
      "date": "27 October 2008 08:03",
      "html": "As for me it's a normal. <BR/>Packets for telnet session may come from any interface, and even from different interfaces in the same telnet session (for example, you are telneting to loopback interface and routing tables are changing). It's hard to apply dynamic access rules on each interface after session setup and any change of config (for example during telnet you setup new subinterface and telnet packets began to be delivered to router trough it). <BR/>That is why the lines after<BR/>line vty 0 4<BR/>are config lines for \"Virtual Exec\" proccess, this proccess acts on application level and it checks only the source address of telnet packet to accept or to drop it (probably, only first packet for each session). Any packet for TCP port 23 or 22 is delivered directly to \"Virtual Exec\". <BR/>It should be to expensive (cpu usage, process logic comlexity) to make this process to analyze TTL,DSCP, etc.. fields for any incomming packet. <BR/><BR/>This things are the same for SNMP requests processig. That is why it's hard to 100% protect router when you are using RW community.",
      "id": "5549235729006957531",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2008-10-27T08:03:00.000+01:00",
      "ref": "7800861358358585138",
      "type": "comment"
    }
  ],
  "count": 7,
  "id": "7800861358358585138",
  "type": "post",
  "url": "2008/10/telnet-access-restrictions.html"
}