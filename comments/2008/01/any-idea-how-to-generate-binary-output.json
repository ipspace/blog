{
  "comments": [
    {
      "date": "10 January 2008 20:00",
      "html": "Not sure if this helps but:<BR/><BR/>SYNOPSIS<BR/>binary format formatString ?arg arg ...?<BR/>binary scan string formatString ?varName varName ...?<BR/><BR/>DESCRIPTION<BR/>This command provides facilities for manipulating binary data. The first form, binary format, creates a binary string from normal Tcl values. For example, given the values 16 and 22, on a 32 bit architecture, it might produce an 8-byte binary string consisting of two 4-byte integers, one for each of the numbers. The second form of the command, binary scan, does the opposite: it extracts data from a binary string and returns it as ordinary Tcl string values.",
      "id": "4905409524079771344",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Unknown",
      "profile": "https://www.blogger.com/profile/17220140750900187474",
      "pub": "2008-01-10T20:00:00.000+01:00",
      "ref": "6443487465968935620",
      "type": "comment"
    },
    {
      "date": "10 January 2008 20:03",
      "html": "Here is a link to a TCL tutorial which i wrote<BR/>http://www.internetworkpro.org/wiki/Edit_files_using_TCL",
      "id": "528977300927303174",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2008-01-10T20:03:00.000+01:00",
      "ref": "6443487465968935620",
      "type": "comment"
    },
    {
      "date": "10 January 2008 20:22",
      "html": "@windexh8er: Thanks, but it doesn't help. The <B>binary format</B> builds the string representation of binary data and is equivalent to what I did with the \\033; the problem is that the <B>puts</B> command doesn't want to display binary data.<BR/><BR/>@danshtr: Nice trick, which answers another question I've got a while ago. Thanks!",
      "id": "2360076809520916920",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Ivan Pepelnjak",
      "profile": "https://www.blogger.com/profile/13457151406311272386",
      "pub": "2008-01-10T20:22:00.000+01:00",
      "ref": "6443487465968935620",
      "type": "comment"
    },
    {
      "date": "10 January 2008 20:33",
      "html": "What if you populated a variable with the binary format formatString line and used puts to display it?",
      "id": "6418819808291920155",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Unknown",
      "profile": "https://www.blogger.com/profile/17220140750900187474",
      "pub": "2008-01-10T20:33:00.000+01:00",
      "ref": "6443487465968935620",
      "type": "comment"
    },
    {
      "date": "10 January 2008 20:41",
      "html": "Same thing:<BR/><BR/>router(tcl)#set x [binary format ca* 27 \"\\[2J\" ]<BR/>^[[2J<BR/>router(tcl)#puts \"$x\"<BR/>^[[2J",
      "id": "6957652130602532305",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Ivan Pepelnjak",
      "profile": "https://www.blogger.com/profile/13457151406311272386",
      "pub": "2008-01-10T20:41:00.000+01:00",
      "ref": "6443487465968935620",
      "type": "comment"
    },
    {
      "date": "11 January 2008 10:39",
      "html": "puts \"\\e[2J\" does quite strange effect.<BR/><BR/>--<BR/>mtve",
      "id": "1796118361854846296",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2008-01-11T10:39:00.000+01:00",
      "ref": "6443487465968935620",
      "type": "comment"
    },
    {
      "date": "11 January 2008 15:55",
      "html": "If you try to generate ansi escape sequences, you can use \"term intern\" on exec level<BR/><BR/>proc fahne { } {<BR/> exec \"terminal international\"<BR/> puts \"\\033\\[2J\"<BR/> puts \"\\033\\[0;0H\"<BR/> puts \"\\033\\[0m |##########\"<BR/> puts \"\\033\\[0m |#########\"<BR/> puts \"\\033\\[0m |\\033\\[31m########\"<BR/> puts \"\\033\\[0m |\\033\\[31m########\"<BR/> puts \"\\033\\[0m |\\033\\[33m#########\"<BR/> puts \"\\033\\[0m |\\033\\[33m##########\"<BR/> puts \"\\033\\[0m |\"<BR/> puts \"\\033\\[0m |\"<BR/> puts \"\\033\\[0m |\"<BR/> puts \"\\033\\[0m\\n\\n\\033\\[32m Yepp \\033\\[0m\"<BR/>}<BR/>fahne",
      "id": "5412853245407117685",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2008-01-11T15:55:00.000+01:00",
      "ref": "6443487465968935620",
      "type": "comment"
    },
    {
      "date": "11 January 2008 18:28",
      "html": "Perfect. It works :) Now I'm getting the file contents on the screen as they should be, but cannot put the terminal into \"raw\" mode (giving Tclsh a character at a time). Maybe I'll get some crazy idea over weekend ;)",
      "id": "7682697614388034575",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Ivan Pepelnjak",
      "profile": "https://www.blogger.com/profile/13457151406311272386",
      "pub": "2008-01-11T18:28:00.000+01:00",
      "ref": "6443487465968935620",
      "type": "comment"
    },
    {
      "date": "11 January 2008 20:16",
      "html": "If you are looking for something like Pascals getch I think you can use  fileevent<BR/><BR/>proc processinput fd {} {<BR/>...<BR/>}<BR/>fileevent stdin readable {processinput stdin}<BR/>vwait forever",
      "id": "1693097981664547764",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2008-01-11T20:16:00.000+01:00",
      "ref": "6443487465968935620",
      "type": "comment"
    },
    {
      "date": "11 January 2008 20:28",
      "html": "Well, the problem is that Tcl script gets the input only after the user has pressed the ENTER key, which is a problem if you're trying to implement a full-screen editor. So even your suggestion will not make stdin <I>readable</I> until the user has signalled the end of line.",
      "id": "4060113898606696912",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Ivan Pepelnjak",
      "profile": "https://www.blogger.com/profile/13457151406311272386",
      "pub": "2008-01-11T20:28:00.000+01:00",
      "ref": "6443487465968935620",
      "type": "comment"
    },
    {
      "date": "11 January 2008 22:29",
      "html": "Ok you're right. Have a look at http://wiki.tcl.tk/11820<BR/>If you remove the shell code, all stty commands and the encoding parameter from the fconfigure commands it is at least startable on ios (with \"term inter\").",
      "id": "5326878525852843449",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2008-01-11T22:29:00.000+01:00",
      "ref": "6443487465968935620",
      "type": "comment"
    },
    {
      "date": "11 January 2008 22:45",
      "html": "I'm trying to port the newer version of it (http://wiki.tcl.tk/16056). And, yes, what we need is  exactly the <B>stty -raw</B> :(",
      "id": "6640030211013829181",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Ivan Pepelnjak",
      "profile": "https://www.blogger.com/profile/13457151406311272386",
      "pub": "2008-01-11T22:45:00.000+01:00",
      "ref": "6443487465968935620",
      "type": "comment"
    }
  ],
  "count": 12,
  "id": "6443487465968935620",
  "type": "post",
  "url": "2008/01/any-idea-how-to-generate-binary-output.html"
}