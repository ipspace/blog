{
  "comments": [
    {
      "comments": [
        {
          "date": "20 October 2017 17:25",
          "html": "Thanks for an exhaustive comment - definitely plenty of interesting thoughts for another blog post or two ;) ... and BTW we&#39;re in violent agreement.<br /><br />As for &quot;Is there a role for a network automation engineer in every company, I would say NO.&quot; I disagree (unless we&#39;re talking about really small companies). However, she doesn&#39;t have to focus exclusively on network automation, but on getting repetitive things (whatever they are) done consistently, reliably, and eventually faster. Agree? Disagree?<br /><br />",
          "id": "9097831903771244954",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2017-10-20T17:25:22.698+02:00",
          "ref": "2498211525898120861",
          "type": "comment"
        }
      ],
      "date": "19 October 2017 19:13",
      "html": "Hi Ivan,<br /><br />To me, this is nothing new.  I have been involved in networking and IT long enough to spot re-circulating ideas and the latest fads.  Fundamentally we are<br />trying to describe a workflow, whether it be using JCL (remember those mainframes) or bash (early UNIX) or ansible/salt (the latest and greatest).  It doesn&#39;t matter whether <br />you come from a UNIX systems admin background or a networking one, you are trying to visualise a series of steps/commands/phases that will get you from start to finish<br />for a particular requirement i.e. build me a 3-tier web-app.<br /><br />Back in the day (not too long ago) I used TCL and expect as the tools of choice to achieve my aim and they worked pretty well.  Today, the choice is python and REST/APIs which you could say<br />is a natural progression.<br /><br />My main issue is with applicability.  Hyperscale companies such as Google and Facebook have significantly different issues to solve compared with your average small to medium<br />enterprise, and yet the media dictate that automation is the path to follow in all cases.<br /><br />When it comes to development then I agree that advances in virtualisation have enabled development teams to provision target environments quick and on-demand<br />and this assists in their efforts to be agile, however, once that application is released into production, the networking element becomes pretty much static<br />and adopting an agile/automated approach to networking does not yield any particular benefits in my opinion.<br /><br />The main cause of delay to any application roll-out will always be the development effort.  The reason networking always seems to be sited as a delay is due to time it takes to include<br />the relevant resource in the overall project plan.  In my experience, the networking guy is always included at the last minute and then introduces further delay by<br />asking pertinent questions that should have been addressed much earlier in the process.<br /><br />It is all about communication.<br /><br />Is there a role for a network automation engineer in every company, I would say NO.  Is there a role for a jack of all trades who understands the company and<br />and will apply optimisations as required, I would say YES.  What would they be called? Well an infrastructure engineer springs to mind.",
      "id": "2498211525898120861",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Unknown",
      "profile": "https://www.blogger.com/profile/12568448441755008432",
      "pub": "2017-10-19T19:13:00.147+02:00",
      "ref": "5987517778979555606",
      "type": "comment"
    }
  ],
  "count": 2,
  "id": "5987517778979555606",
  "type": "post",
  "url": "2017/10/must-read-network-engineer-persona.html"
}