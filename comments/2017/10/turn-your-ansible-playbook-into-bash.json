{
   "comments": [
      {
         "comments": [
            {
               "date": "12 October 2017 14:17",
               "html": "Yeah, sure... have you tried adding that to the #! line? Did it work? If it did, under which shell?",
               "id": "249714100607194810",
               "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
               "name": "Ivan Pepelnjak",
               "profile": "https://www.blogger.com/profile/13457151406311272386",
               "pub": "2017-10-12T14:17:31.555+02:00",
               "ref": "743350873115541975",
               "type": "comment"
            }
         ],
         "date": "12 October 2017 14:02",
         "html": "export ANSIBLE_STDOUT_CALLBACK=dense; ansible-playbook  [options]",
         "id": "743350873115541975",
         "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
         "name": "privateip",
         "profile": "https://www.blogger.com/profile/09828405685139931123",
         "pub": "2017-10-12T14:02:55.748+02:00",
         "ref": "2275435288747373104",
         "type": "comment"
      },
      {
         "date": "12 October 2017 15:15",
         "html": "I&#39;d actually preffer making aliases in bashrc. Makes it easier to manage and move around instead of creating loads of symlinks.<br />Just add this:<br />alias get-ssh-keys=&quot;/vagrant/tools/ssh-keys/get-keys.yml&quot;<br />inside ~./bashrc<br />Reload bash by typing source ~./bashrc<br /><br />You could also be creative and make a functions and such",
         "id": "413061235396444665",
         "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
         "name": "rwrz",
         "profile": "https://www.blogger.com/profile/11405076238992238912",
         "pub": "2017-10-12T15:15:10.551+02:00",
         "ref": "2275435288747373104",
         "type": "comment"
      },
      {
         "comments": [
            {
               "date": "12 October 2017 20:23",
               "html": "I would recommend anyone believing in the magic of whatever replacing CLI to read this (in particular #2):<br /><br />http://queue.acm.org/detail.cfm?id=1921361<br /><br />As for portability of shells, sysadmins might be yammering about many things, but the good ones seem to be doing a decent job:<br /><br />http://highscalability.com/blog/2013/11/19/we-finally-cracked-the-10k-problem-this-time-for-managing-se.html<br /><br />Obviously people who meet the requirements of RFC 1925 Rule #4 will tell you CLI is dead. Let&#39;s revisit this in 10 years ;)<br /><br />",
               "id": "3663810875746966994",
               "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
               "name": "Ivan Pepelnjak",
               "profile": "https://www.blogger.com/profile/13457151406311272386",
               "pub": "2017-10-12T20:23:15.008+02:00",
               "ref": "1805430402279859767",
               "type": "comment"
            },
            {
               "date": "12 October 2017 23:10",
               "html": "Didn&#39;t mean to deviate from the main topic too much, but when looking at some of the CLIs just front-ending RESTAPIs, I wonder if &quot;survival&quot; of CLI isn&#39;t just in the eyes of the beholder.",
               "id": "3826322045766997680",
               "image": "https://3.bp.blogspot.com/_72yM2Ossrws/SiSMewEN3FI/AAAAAAAAAKo/jKktz6qHCeY/S220-s32/twitter-pict.png",
               "name": "Netfortius",
               "profile": "https://www.blogger.com/profile/07549850819912423153",
               "pub": "2017-10-12T23:10:48.835+02:00",
               "ref": "1805430402279859767",
               "type": "comment"
            }
         ],
         "date": "12 October 2017 19:09",
         "html": "Ivan - aren&#39;t we now moving the &quot;CLI&quot;[-like] approach, upstream (the one we are just trying to depart, via the more structured and robust approach of RESTAPI), to the Bash shell, by maintaining more complex scripts? <br /><br />Who is / how are we going to fix the portability of Bash vs other shells (e.g. ksh, zsh) when taking scripts and move them across *nix platforms, or with diff path(s) and env, troubleshoot shell exit codes, etc.? Or am I misunderstanding the intent here?",
         "id": "1805430402279859767",
         "image": "https://3.bp.blogspot.com/_72yM2Ossrws/SiSMewEN3FI/AAAAAAAAAKo/jKktz6qHCeY/S220-s32/twitter-pict.png",
         "name": "Netfortius",
         "profile": "https://www.blogger.com/profile/07549850819912423153",
         "pub": "2017-10-12T19:09:49.315+02:00",
         "ref": "2275435288747373104",
         "type": "comment"
      },
      {
         "comments": [
            {
               "date": "13 October 2017 11:34",
               "html": "Thanks a million! Your Google-Fu is stronger than mine ;)",
               "id": "7101156362095222836",
               "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
               "name": "Ivan Pepelnjak",
               "profile": "https://www.blogger.com/profile/13457151406311272386",
               "pub": "2017-10-13T11:34:13.926+02:00",
               "ref": "1941003067653797818",
               "type": "comment"
            },
            {
               "date": "29 November 2017 11:38",
               "html": ":)",
               "id": "904155765689629724",
               "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
               "name": "Antonio Ojea",
               "profile": "https://www.blogger.com/profile/14615081241229714383",
               "pub": "2017-11-29T11:38:58.903+01:00",
               "ref": "1941003067653797818",
               "type": "comment"
            }
         ],
         "date": "13 October 2017 10:50",
         "html": "This link explains the reason why the environment variable doesn&#39;t work in the shebang:<br /><br />https://stackoverflow.com/a/10217307<br /><br />Anyway, you can add that variable permanently to your shell http://www.linuxfromscratch.org/blfs/view/8.0/postlfs/profile.html:<br /><br />export ANSIBLE_STDOUT_CALLBACK=dense <br /><br />or run the script with the env variable in the same line:<br /><br />$ ANSIBLE_STDOUT_CALLBACK=dense ~/bin/get-ssh-keys<br />",
         "id": "1941003067653797818",
         "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
         "name": "Antonio Ojea",
         "profile": "https://www.blogger.com/profile/14615081241229714383",
         "pub": "2017-10-13T10:50:44.177+02:00",
         "ref": "2275435288747373104",
         "type": "comment"
      },
      {
         "comments": [
            {
               "date": "17 February 2022 05:14",
               "html": "<p>Thanks a million for the pointer. It sent me on a more focused search trip resulting in...</p>\n\n<p>https://en.wikipedia.org/wiki/Shebang_(Unix)#Character_interpretation</p>\n\n<p>... which totally explains the challenge and why -S solves it -- because a string starting with -S is split into argv components. Checked the https://github.com/coreutils/coreutils/blob/master/src/env.c code just to be on the safe side ;)</p>\n",
               "id": "1030",
               "name": "Ivan Pepelnjak",
               "pub": "2022-02-17T17:14:14",
               "ref": "1026",
               "type": "comment"
            }
         ],
         "date": "17 February 2022 07:39",
         "html": "<p><code>#!/usr/bin/env -S ANSIBLE_STDOUT_CALLBACK=dense ansible-playbook</code></p>\n\n<p>&#39;env&#39; is MEANT to execute a command under a specific environment, many of those SO comments are dead wrong. While most people misuse env as they think it does some path magic .. .no, shell does that, env just uses it and we normalized on it since &#39;shebang&#39; requires a full path.</p>\n\n<p>note: i have found systems with <code>env</code> outside /usr/bin/ but they are the exception, 99.99% of the time it is there</p>\n",
         "id": "1026",
         "name": " Brian Coca",
         "pub": "2022-02-17T07:39:11",
         "type": "comment"
      }
   ],
   "count": 5,
   "id": "2275435288747373104",
   "type": "post",
   "url": "2017/10/turn-your-ansible-playbook-into-bash.html"
}
