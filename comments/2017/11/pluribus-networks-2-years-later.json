{
  "comments": [
    {
      "date": "28 November 2017 17:03",
      "html": "Hi Ivan,<br /><br />This is Marco Pessi with Pluribus. Thanks for your article first of all!<br />I do not think you have misunderstood anything from the NFD16 session. The content and presenters were chosen to provide a comprehensive overview of our different technologies to the broad NFD community, as we thought that, after a long 2.5 years break, there was a need to start over. <br /><br />We were also aware that this would have led to some information gaps, and unfortunately the technical documentation on our website is too incomplete (and I really have to apologize for that), to be used to complement the information you grasped during our presentation.<br /><br />Let me make two quick comments: (1) we do have an EVPN gateway in our roadmap and (2) we support write-read partitions for our fabric.<br />I will post a new comment when more documentation will be available and/or hopefully we will be able to demo/discuss these topics at next NFD<br /><br />Let me make now two longer comments:<br />(1) Regarding your statement that CPUs are &quot;laughably slow\u201d\u2026please note that the new generation of white boxes based on Broadwell have server grade operating systems and can provide flow telemetry for 5000 sessions per second. We do provide our own brite-boxes with slightly different components and that enable additional CPU lines available on certain merchant silicon asic. This results in additional capabilities: L4-L7 flow analytics and, on the networking side, increased virtualization capacity, for example: number of containers (router instances)<br /><br />(2) I am not sure I follow your comment about Pluribus fabric being useful only to who is not good at automating. Pluribus fabric presents a high level abstraction of network objects, that can be managed with either CLI or REST API. For example, a subnet with anycast gateway is a single object (provisioned with either a single configuration line or REST API command), versus a single object on every switch for the majority of other vendor implementations: programming a network of 40 switches and 400 subnets with Pluribus requires provisioning 400 objects, with other vendors it is 16000 objects: if you allow me the analogy, it is a bit like scripting versus programming with Assembly. I agree I can do more damage with a higher level of abstraction, but my point is that handling exceptions and troubleshooting inconsistencies with a huge provisioning state is no fun either and results in higher operational costs.<br />My opinion is that good automation can hardly solve problems of poorly programmable components: automation works well if it is holistically implemented at all components and layers. One of our goals at Pluribus is to provide a consistent and programmable network layer using white/brite boxes.<br />Still, to your point, if customers have already invested in an automation framework that relies on box-by-box management and do not see enough value in the fabric, we can provide a cheaper Netvisor license that does not include the fabric.<br /><br />Thanks for reading my comments and looking forward to hosting you again at our offices (and please feel comfortable to wear anything you like!)<br /><br />Best!<br />~Marco",
      "id": "921036811791645439",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Unknown",
      "profile": "https://www.blogger.com/profile/03559504152066361945",
      "pub": "2017-11-28T17:03:42.873+01:00",
      "ref": "8366280648059159287",
      "type": "comment"
    }
  ],
  "count": 1,
  "id": "8366280648059159287",
  "type": "post",
  "url": "2017/11/pluribus-networks-2-years-later.html"
}