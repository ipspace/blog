{
  "comments": [
    {
      "date": "31 January 2012 09:05",
      "html": "&gt; Where am I going?<br /><br />&quot;Why do we need OF if we can do most of that magic with MPLS&quot;? ;) I think at least certain Kireeti is with you on this one, judging by the contents of a presentation slide pack I saw a couple days back. :)<br /><br />But then again, MPLS can&#39;t help if you want to direct traffic received at the edge into FECs with arbitrary granularity, which I&#39;m perceiving is one of the major attractive parts of the OF value proposition.<br /><br />Anyway - tradeoffs, tradeoffs everywhere, nor any drop to drink. :)",
      "id": "4497115476966975877",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Dmitri Kalintsev",
      "profile": null,
      "pub": "2012-01-31T09:05:30.384+01:00",
      "ref": "9212364206377889484",
      "type": "comment"
    },
    {
      "date": "31 January 2012 09:15",
      "html": "Pic mildly related :)",
      "id": "7452405038056652036",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Dmitri Kalintsev",
      "profile": null,
      "pub": "2012-01-31T09:15:16.587+01:00",
      "ref": "9212364206377889484",
      "type": "comment"
    },
    {
      "date": "31 January 2012 14:27",
      "html": "No surprise we&#39;re in sync with a certain Kireeti (and Juniper&#39;s party line). Martin Casado came to the same conclusions in one of his blog posts (although he did not mention MPLS). <br /><br />BTW, I guess I already wrote about the whole hybrid concept: http://blog.ioshints.info/2011/11/openflow-deployment-models.html",
      "id": "7032500135025033002",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Ivan Pepelnjak",
      "profile": null,
      "pub": "2012-01-31T14:27:29.380+01:00",
      "ref": "9212364206377889484",
      "type": "comment"
    },
    {
      "date": "01 February 2012 00:09",
      "html": "I&#39;m still stuck on flow recognition at high speed in all the OF switches. How can that be reasonably cost-effective until it is in merchant silicon? And how close is that to happening? That&#39;s where I can relate to MPLS: label recognition at high speed seems a lot easier to build. And building LSP&#39;s for flows seems easier to troubleshoot. <br /><br />The info about flow update speed is very interesting. I&#39;ve just been reading about TCAM update speeds being a limiting factor to convergence in some situations. I advised on a very bizarre system design a while back where someone was trying to use central SNMP to control a switch fabric. I pointed out that at the time you&#39;d be lucky to get maybe 10&#39;s of SNMP sets per second; the spec called for 1000+. Decentralized control and some other tricks (pre-configured static IGMP joins, trading bandwidth for speed) came a whole lot closer to meeting their needs! <br /><br />Anyway, for OF, central programming means updating N flow items x M switches in the fabric, that doesn&#39;t sound like it&#39;d scale well! <br /><br />I&#39;m watching with interest to see how OF overcomes these challenges. Am I exhibiting aging in the form of resistance to new ideas, or are there indeed challenges there?",
      "id": "6294713266178144824",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Pete Welcher",
      "profile": null,
      "pub": "2012-02-01T00:09:42.284+01:00",
      "ref": "9212364206377889484",
      "type": "comment"
    },
    {
      "date": "01 February 2012 07:57",
      "html": "It would be nice to see what exactly the switches can recognize in hardware (and what the fallback mechanisms are - software switching or failure to inject flow), but the assumption has always been that the flow recognition will be done by the silicon and at least the very basic operations (matching on destination MAC, VLAN tag or source/destination IP) can be done in hardware.<br /><br />I&#39;m not that concerned about the MxN problem (although with 600 flows/sec and 50 switches, that&#39;s 30K updates/sec ... hmmm ...), I&#39;m even more concerned about all the other details (including fast feedback loops that the controller can&#39;t possibly cope with). Anyhow, speaking with the OpenFlow realists (the people who are developing production-focused solutions), I got the feeling that they&#39;re aware of the limitations and challenges and are working hard to address them and have the opportunity to do things in a different way.<br /><br />As for the &quot;aging&quot; part, we&#39;re in the same boat, and I like to think we&#39;ve become somewhat immune to the reality distortion fields around us, not resistant to change  :-P",
      "id": "8936346522033198851",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Ivan Pepelnjak",
      "profile": null,
      "pub": "2012-02-01T07:57:58.302+01:00",
      "ref": "9212364206377889484",
      "type": "comment"
    },
    {
      "date": "02 February 2012 17:02",
      "html": "This is where the software switching overlay starts to make sense. Switch/link failures in the physical network do not change the topology of the virtual network.  The physical network doesn&#39;t need to carry the flow state of the VMs, nor maintain any tables about where VMs are located.",
      "id": "6807494296195339636",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Brad Hedlund",
      "profile": null,
      "pub": "2012-02-02T17:02:11.100+01:00",
      "ref": "9212364206377889484",
      "type": "comment"
    }
  ],
  "count": 6,
  "id": "9212364206377889484",
  "type": "post",
  "url": "2012/01/fib-update-challenges-in-openflow.html"
}