{
  "comments": [
    {
      "comments": [
        {
          "date": "27 January 2020 17:38",
          "html": "Agreed, would suggest using jsonschema as well, as it is becoming the de facto standard in Python. For Ansible specific use cases, I published this module a year or so ago. https://github.com/networktocode/ntc-ansible/blob/master/library/ntc_validate_schema.py",
          "id": "6171816520404884466",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Unknown",
          "profile": "https://www.blogger.com/profile/11092874405740802134",
          "pub": "2020-01-27T17:38:56.743+01:00",
          "ref": "2251202067963649613",
          "type": "comment"
        }
      ],
      "date": "25 January 2020 18:38",
      "html": "We have something similar for <a href=\"https://github.com/GNS3/gns3-registry\" rel=\"nofollow\">GNS3 device templates</a>. The check.py script validates all files in the appliances/ directory using the JSON schema files in the schemas/ directory.<br /><br />Maybe the wheel was re-invented :) but there&#39;s no need for users to edit python scripts when a new schema is introduced.",
      "id": "2251202067963649613",
      "image": "https://4.bp.blogspot.com/-ZOXsPp2jWZM/WLFLiMZondI/AAAAAAAADJ4/Ut7WBaNvJIInOF_9feWqAIeZiw3nyuEmwCK4B/s32/en2.jpg",
      "name": "Andras Dosztal",
      "profile": "https://www.blogger.com/profile/04707560608698340062",
      "pub": "2020-01-25T18:38:44.171+01:00",
      "ref": "4145326682017024824",
      "type": "comment"
    }
  ],
  "count": 2,
  "id": "4145326682017024824",
  "type": "post",
  "url": "2020/01/automation-solution-testing-data-models.html"
}