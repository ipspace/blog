{
   "comments": [
      {
         "date": "14 September 2020 01:17",
         "html": "<p>I like Application Centric Infrastructure, for this &quot;application centric&quot; approach... and you have to go along this path to find it very useful.\nI consider EPGs and contracts, just like security groups and rules inside AWS, there are very loosely tied to network construct (IP address, subnetting/routing, ...).\nWhen designing an ACI Fabric, we try to go along this philopsophy and make decision along this path.</p>\n\n<p>Yes, we took several hours to find naming convention for every type of objects in ACI because it is object-oriented.</p>\n\n<p>And, to be really transparent, when starting with ACI, you have to think about automation at the beginning (even if you don&#39;t automate at first), it has to come quickly, in order to leverage the abstract ACI offers. That&#39;s where API First is a real thing and ACI gives you all the tool (API inspector) to go API.</p>\n\n<p>We have now architects and developpers that can define their architectures logically without any IP-related information, and provision all EPGs and contracts (and ...) with API calls, from a JSON/YAML/CSV/xls description file.</p>\n\n<p>And so, I would&#39;nt recommand ACI if you want to stay in a &quot;network-centric&quot; mode, I agree.</p>\n",
         "id": "128",
         "name": " Mathieu Millet",
         "pub": "2020-09-14T13:17:59",
         "type": "comment"
      }
   ],
   "count": 1,
   "type": "post",
   "url": "2020/09/cisco-aci-too-different.html"
}
