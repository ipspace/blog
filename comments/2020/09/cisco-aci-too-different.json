{
   "comments": [
      {
         "date": "14 September 2020 01:17",
         "html": "<p>I like Application Centric Infrastructure, for this &quot;application centric&quot; approach... and you have to go along this path to find it very useful.\nI consider EPGs and contracts, just like security groups and rules inside AWS, there are very loosely tied to network construct (IP address, subnetting/routing, ...).\nWhen designing an ACI Fabric, we try to go along this philopsophy and make decision along this path.</p>\n\n<p>Yes, we took several hours to find naming convention for every type of objects in ACI because it is object-oriented.</p>\n\n<p>And, to be really transparent, when starting with ACI, you have to think about automation at the beginning (even if you don&#39;t automate at first), it has to come quickly, in order to leverage the abstract ACI offers. That&#39;s where API First is a real thing and ACI gives you all the tool (API inspector) to go API.</p>\n\n<p>We have now architects and developpers that can define their architectures logically without any IP-related information, and provision all EPGs and contracts (and ...) with API calls, from a JSON/YAML/CSV/xls description file.</p>\n\n<p>And so, I would&#39;nt recommand ACI if you want to stay in a &quot;network-centric&quot; mode, I agree.</p>\n",
         "id": "128",
         "name": " Mathieu Millet",
         "pub": "2020-09-14T13:17:59",
         "type": "comment"
      },
      {
         "date": "14 September 2020 06:08",
         "html": "Good thoughts which I mostly agree but few buts:<br />\n\n<p>1) &quot;One needs to impose some structure, naming conventions&hellip;, and most people don&rsquo;t seem to get that done&quot; Well that&#39;s for me a great example why the client and VARs should start automate to give their deployments and DCs some structure and standardize it. You can make a mess out of any technology in the world if you can&#39;t design it properly that&#39;s a fact.</p>\n\n<p>2) &quot;but it turns out that the moment you start automating your deployments, you might not need Cisco ACI anymore&quot; - that is very subjective. Yes you can automate your 3 DCs with 6 spines and 12 leafs start extending your VXLANs without ACI but that&#39;s something you can do if you have team of at least 2-3 developers who has skills for it. Not typical enterprise which has team of 2 engineers who are sitting most of the time on P1 cases and at the same time helping their boss with fixing his Outlook.</p>\n\n<p>3) Great benefit which you didn&#39;t mention of APIC is that this is your single source of truth in your DC. Yes you can start automating your DC without APIC and using just a standard NXOS APIs but that&#39;s not the only point why to run ACI. APIC gives you much more than just API for configuring your DC but also provide you realtime metrics from your infrastructure and provides APIs for your telemetry etc. Yes APIC APIs look like they have been built in 2000 (which it maybe actually truth) and they have many gaps but that would be another talk....NXOS APIs are in my opinion even worst but that&#39;s just a thing of taste....</p>\n",
         "id": "129",
         "name": "Matyas",
         "pub": "2020-09-14T18:08:03",
         "type": "comment"
      }
   ],
   "count": 2,
   "type": "post",
   "url": "2020/09/cisco-aci-too-different.html"
}
