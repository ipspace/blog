{
  "comments": [
    {
      "date": "18 April 2019 20:11",
      "html": "I think the difference is that REST as a system (or architecture) itself doesn&#39;t have the transaction capability whereas NETCONF for example has it built in. Of course you can rely on the backup and restore functionality of your device (or black box). But that&#39;s not the point here. ",
      "id": "2723852604552766342",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Anonymous",
      "profile": "https://www.blogger.com/profile/17892204563666956100",
      "pub": "2019-04-18T20:11:21.921+02:00",
      "ref": "3197498747457276456",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "19 April 2019 17:47",
          "html": "In ACI case it\u2019s actually a bit simpler as you\u2019re only dealing with a single device unless you\u2019re combining ACI configuration with services deployment.",
          "id": "848901476058207204",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2019-04-19T17:47:10.340+02:00",
          "ref": "120203138767092883",
          "type": "comment"
        },
        {
          "date": "19 April 2019 17:58",
          "html": "Sorry, I should have made it more clear that I meant the comment not specifically for the ACI use case, but rather as a pointer for the more generic Ansible use cases. Kind of how I read the sentence I quoted.<br /><br />Anyway, good read and insight as per usual.<br />",
          "id": "606394685306877797",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Albert Siersema",
          "profile": "https://www.blogger.com/profile/04847257511165693348",
          "pub": "2019-04-19T17:58:08.551+02:00",
          "ref": "120203138767092883",
          "type": "comment"
        }
      ],
      "date": "19 April 2019 17:45",
      "html": "&gt; Putting an \u201con any failure do X\u201d in an ansible play isn\u2019t feasible<br /><br />I think I understand where you&#39;re going with this, after all you say &#39;not feasible&#39; and emphatically not &#39;not possible&#39;.<br />For completeness sake, it&#39;s somewhat possible with e.g. &#39;any_errors_fatal: true&#39;, &#39;serial: 1&#39; combined with &#39;block&#39; and &#39;rescue&#39;.<br />Depending on your device there is the complexity of ordering on which I touched upon in another comment somewhere on Ivan&#39;s blog.<br />",
      "id": "120203138767092883",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Albert Siersema",
      "profile": "https://www.blogger.com/profile/04847257511165693348",
      "pub": "2019-04-19T17:45:28.874+02:00",
      "ref": "3197498747457276456",
      "type": "comment"
    },
    {
      "date": "19 April 2019 17:54",
      "html": "&gt; where I shouldn\u2019t have a very high volume of configuration changes<br /><br />and learn something more from software development workflows, CI/CD, version control: small individual changes. Release smaller changes, more often. Pinpointing the culprit is much easier and rollbacks less painful.<br />",
      "id": "8083147797902682988",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Albert Siersema",
      "profile": "https://www.blogger.com/profile/04847257511165693348",
      "pub": "2019-04-19T17:54:36.617+02:00",
      "ref": "3197498747457276456",
      "type": "comment"
    }
  ],
  "count": 5,
  "id": "3197498747457276456",
  "type": "post",
  "url": "2019/04/making-cisco-aci-rest-api-transactional.html"
}