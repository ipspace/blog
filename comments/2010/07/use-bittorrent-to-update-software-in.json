{
  "comments": [
    {
      "date": "28 July 2010 20:44",
      "html": "Dang, remember the times when reliable multicast was invented for that same purpose :)",
      "id": "5116548282413438154",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Petr Lapukhov",
      "profile": null,
      "pub": "2010-07-28T20:44:20.000+02:00",
      "ref": "4405165657411586963",
      "type": "comment"
    },
    {
      "date": "28 July 2010 20:47",
      "html": "It would be awesome if we would see that Multicast would be used more when sharing large amounts of data across many computers. I don&#39;t know all the ins and outs of Multicast, but I see trouble with acknowledgments and resending of lost data.. :(",
      "id": "4831210390225207544",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Ronald",
      "profile": null,
      "pub": "2010-07-28T20:47:32.000+02:00",
      "ref": "4405165657411586963",
      "type": "comment"
    },
    {
      "date": "28 July 2010 20:48",
      "html": "*reminds me",
      "id": "1198993332659809895",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Petr Lapukhov",
      "profile": null,
      "pub": "2010-07-28T20:48:57.000+02:00",
      "ref": "4405165657411586963",
      "type": "comment"
    },
    {
      "date": "28 July 2010 20:54",
      "html": "You see, that&#39;s the difference between an academic solution and real-life engineering  :-P<br /><br />If you want to deploy reliable multicast, you have to deploy multicast in your network (assuming your 1000 servers are not bridged together), find a software package that actually supports reliable multicast and then troubleshoot the whole thing until you find out all the bugs and omissions. Of course there could be a huge hidden community of reliable multicast users that I&#39;m totally unaware of (I already got burnt on server-to-server FTP transfers and Tcl+IOS skills, so I should have learnt to shut up ... but I haven&#39;t ... yet).<br /><br />On the other hand, you can take software stress-tested by millions of users, tweak it a bit and have it up and running in a few days. Not to mention this solution is way more scalable and resilient than reliable multicast could ever be ... but, yes, it uses more bandwidth ... which might not be relevant if you&#39;re distributing 100MB package over 10Gb links  8-)",
      "id": "3648759313264263606",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Ivan Pepelnjak",
      "profile": null,
      "pub": "2010-07-28T20:54:55.000+02:00",
      "ref": "4405165657411586963",
      "type": "comment"
    },
    {
      "date": "28 July 2010 21:05",
      "html": "Well the whole idea of reliable multicast was relying on NAKs (negative ACKs) as opposed to positive ACKs - this reduces the upstream feedback flow - and implementing intermediate buffering - this improves local stream recovery. The design was therefore relatively scalable, but never reached widespread adoption, though there is (limited) support in Cisco IOS.",
      "id": "6655232198003816532",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Petr Lapukhov",
      "profile": null,
      "pub": "2010-07-28T21:05:43.000+02:00",
      "ref": "4405165657411586963",
      "type": "comment"
    },
    {
      "date": "28 July 2010 21:10",
      "html": "See this is why we&#39;re screwed with Internet ;) They always throw in bandwidth on any problem and then go on a coffee break saying how much progress we have made! <br /><br />I damn the Moore law every day, it just spoils people ;)",
      "id": "6585008736216971600",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Petr Lapukhov",
      "profile": null,
      "pub": "2010-07-28T21:10:09.000+02:00",
      "ref": "4405165657411586963",
      "type": "comment"
    },
    {
      "date": "29 July 2010 15:44",
      "html": "I never knew https://tools.ietf.org/html/rfc5740 such thing existed already. Another day, another thing learned :-)",
      "id": "820454912053492770",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Ronald",
      "profile": null,
      "pub": "2010-07-29T15:44:38.000+02:00",
      "ref": "4405165657411586963",
      "type": "comment"
    },
    {
      "date": "01 August 2010 03:42",
      "html": "On the subject of multicast software deployment, I thought you might find this interesting; we use it to deploy disk images to our Windows XPE-based point of sale devices. <br /><br />http://www.cs.utah.edu/flux/papers/frisbee-usenix03/",
      "id": "7906005107087777412",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Phil",
      "profile": null,
      "pub": "2010-08-01T03:42:41.000+02:00",
      "ref": "4405165657411586963",
      "type": "comment"
    }
  ],
  "count": 8,
  "id": "4405165657411586963",
  "type": "post",
  "url": "2010/07/use-bittorrent-to-update-software-in.html"
}