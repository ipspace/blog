{
   "comments": [
      {
         "date": "16 March 2021 09:38",
         "html": "Two cents: when discussing stuff that change infrequently, we&#39;ve found that YAML is good enough. Nevertheless, when it&#39;s about things with daily changes (also see firewall rules), it&#39;s a pain to manage it using text files directly.<br />\n\n<p>To that end, our approach has been to implement a 2-step process: first step is DB/Excel-to-YAML/JSON, second step is YAML/JSON-to-devices. This way, we&#39;re able to enjoy advantages from both approaches albeit the pain of writing the &quot;glue&quot; between states.</p>\n\n<p>That said, it seems that Dolt (especially as a backend for ~~NetBox~~ Nautobot) is a very interesting approach to &quot;marry&quot; the two in a more structured way...</p>\n",
         "id": "473",
         "name": " Nikos Kallergis",
         "pub": "2021-03-16T09:38:49",
         "type": "comment"
      },
      {
         "date": "16 March 2021 12:37",
         "html": "<p>@Nikos: Thanks for the comment - looks like you went down this path: https://www.ipspace.net/kb/DataModels/65-Data-Transformation.html</p>\n\n<p>&quot;This way, we&#39;re able to enjoy advantages from both approaches albeit the pain of writing the &quot;glue&quot; between states.&quot; &lt;&lt; This is sometimes called &quot;squashed sausage effect&quot;. You can&#39;t escape the complexity, you can only try to contain it, and sometimes you can decide where you want to push it to.</p>\n\n<p>As for Dolt: it&#39;s a great idea, but to use it with an IPAM/CMDB system you&#39;d have to make that system Dolt/branch aware. Maybe N2C will get there with Nautobot.</p>\n",
         "id": "474",
         "name": "Ivan Pepelnjak",
         "pub": "2021-03-16T12:37:14",
         "type": "comment"
      }
   ],
   "count": 2,
   "type": "post",
   "url": "2021/03/using-yaml-not-excel.html"
}
