{
   "comments": [
      {
         "date": "29 September 2025 04:23",
         "html": "<p>Not to mention that if you embrace this new way of doing things, it kinda tears your address plan to shreds. The whole promise of answering &quot;/64&quot; to every &quot;how big should this segment be?&quot; question now goes out the window.</p>\n\n<p>If you&#39;re running a sizable campus network and you assume the worst-case (every device is an android device), then we&#39;re back to playing &quot;right sizing&quot; games just with prefixes instead of addresses. Or you can just pretend that IPv6 addresses only has 64 bits and then re-adopt IPv4 thinking.</p>\n\n<p>Looking at an example -- In your address plan, if you had assigned a /48 to each building and used 8 bits for &quot;function&quot; and 8 bits for an instance (in case you needed multiple VLANs to deal with broadcast domain size), then you can really only assume 250 devices for android in any given function, which isn&#39;t a lot.</p>\n\n<p>Now realistically, most big networks I know of tunnel wireless traffic to a central controller cluster, which helps if had a big &#39;ol &quot;reserved for future use&quot; in the top level of your address plan that you can devote to Android.</p>\n\n<p>My ranting aside, it really does necessitate that everyone re-examines address plans.</p>\n",
         "id": "2755",
         "name": " James Harr",
         "pub": "2025-09-29T16:23:32",
         "type": "comment"
      },
      {
         "comments": [
            {
               "date": "02 October 2025 08:52",
               "html": "<p>Thanks a million for the battery info -- that might explain my iPhone&#39;s battery drain when I&#39;m roaming.</p>\n\n<p>For a crash course in &quot;what might be going on&quot;:</p>\n\n<ul>\n<li>RFC 7849 is a nice summary of what a mobile device should support (both extending WAN-side /64 to LAN and IA_PD)</li>\n<li>I always found RFC 7066 an excellent resource when figuring out how IPv6 hosts should behave on 3GPP P2P links (for example, Appendix A explains why we need a /64 for every mobile device)</li>\n</ul>\n",
               "id": "2759",
               "name": " Ivan Pepelnjak",
               "pub": "2025-10-02T08:52:25",
               "ref": "2758",
               "type": "comment"
            }
         ],
         "date": "02 October 2025 05:45",
         "html": "<p>&gt; IPv4 is bad for batteries because phones need to keep NAT sessions alive. To me, this makes as much sense as my usual quip that copy-paste makes rockets explode, but maybe I&rsquo;m missing something.</p>\n\n<p>This part is true, Ivan. Dating back to 2013 (or as early as 2011 IIRC, it&#39;s been a decade+ since I read it), there was a paper Cisco published (I can&#39;t find it now, but you may have better Google fu skills than me) that demonstrated/studied how CGNAT/NAT = battery expense due to NAT keep-alive traffic.</p>\n\n<p>I think rfc6269 and rfc6887 also talked about batteries.</p>\n\n<p>The apps running on the host keeps sending those packets every X seconds, which means a lot on mobile devices&#39; battery runtime. Keep in mind, the mobile phone can have like 200 apps, and maybe 20-50 do &ldquo;light&rdquo; background NAT keep-alive every X second. VoWiFi alone in my testing sends keep-alive every 5&ndash;10 seconds &mdash; this is insane.</p>\n\n<p>Anecdotally, I&#39;ve run a lot of &ldquo;tests&rdquo; in my home lab (I have physical transit, public routed v4/v6 blocks, no NAT aka NAT-only for testing) over the past 4&ndash;5 years. Go to sleep with iPhone at 100% battery (verified by CoconutBattery), wake up to 10% drain with NAT (no IPv6) vs wake up to 1-2% or 0% drain with NAT+native IPv6 or native IPv4+native IPv6.</p>\n\n<p>The &ldquo;fair&rdquo; compromise I found that worked best for real-world networking:\n1. IPv4 CGNAT/NAT with EIM-EIF (hairpin too, because TURN).\n2. Native IPv6.\n3. Move on with life.</p>\n\n<p>Yes, I&#39;m obsessed with battery life on mobile computing devices, off-topic, but I recommend every tech person to read everything here:\nhttps://batteryuniversity.com/</p>\n\n<p>Don&#39;t quote me on this one, just what I&#39;ve heard/seen: Regarding LTE/5G, I believe the general practice is a /64 link-prefix per PDP/PDU(I think this is 5G terminology) context/session, the UE then generates /128s using SLAAC. However, some Telcos may already be doing /64 ia_pd for a long time.</p>\n\n<p>Few folks in the consulting world have advocated for /63 ia_pd per UE in LTE/5G for a long-time, some I heard deployed this successfully in the past, but there&#39;s no public-facing docs or presentations/talks about this as far as I know.</p>\n\n<p>But I recently had a chance to talk to an MVNO, and I asked about IPv6, turns out 3GPP world is a mess and not every EPC software maker implemented IPv6 specs the same way, so in this instance, the IPv6 UE Pool &mdash; nobody knows what it means ia_na? ia_pd? SLAAC? Something magical? No idea &#x1F937;&zwj;&#x2642;&#xFE0F;\nI just advised them on future proofing the subnet plan and moved on with my life, don&#39;t have bandwidth to learn that world of networking.</p>\n",
         "id": "2758",
         "name": " Daryll Swer",
         "pub": "2025-10-02T05:45:34",
         "type": "comment"
      },
      {
         "comments": [
            {
               "date": "02 October 2025 05:04",
               "html": "<p>&gt; You mentioned extending the WiFi prefix to the tether as an option, but that only works with SLAAC.</p>\n\n<p>How many realistic scenarios have you seen where a phone connected to a WiFi would offer a tethered IPv6 connection to... what? Over what?</p>\n\n<p>There&#39;s a reason my Apple Watch has a WiFi interface -- I can use it even when I&#39;m in another room than my phone.</p>\n\n<p>&gt; There&#39;s no guarantee you can get multiple addresses [with DHCPv6]</p>\n\n<p>If you use different client identifiers for tethered devices, you&#39;ll get multiple addresses, right?</p>\n\n<p>&gt; This in general gives me very mixed feelings about the Android policy.</p>\n\n<p>You say policy, I say crusade ;) No other major vendor has a problem with running a DHCPv6 client using IA_NA on their IPv6 hosts.</p>\n",
               "id": "2761",
               "name": "Ivan Pepelnjak",
               "pub": "2025-10-02T17:04:53",
               "ref": "2760",
               "type": "comment"
            }
         ],
         "date": "02 October 2025 09:04",
         "html": "<p>You mentioned extending the WiFi prefix to the tether as an option but that only works with SLAAC. It theoretically could be done with DHCPv6 but likely wouldn&#39;t be as there&#39;s no guarantee you can get multiple addresses. This in general gives me very mixed feelings about the Android policy. On the one hand I see the frustration but on the other hand I feel like the restrictions actually do benefit v6 usability from a users perspective.</p>\n",
         "id": "2760",
         "name": " Scoopta",
         "pub": "2025-10-02T09:04:04",
         "type": "comment"
      }
   ],
   "count": 3,
   "type": "post",
   "url": "2025/09/android-dhcpv6-prefix-delegation.html"
}
