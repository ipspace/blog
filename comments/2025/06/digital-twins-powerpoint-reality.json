{
   "comments": [
      {
         "comments": [
            {
               "date": "19 June 2025 05:10",
               "html": "<p>You&#39;re absolutely right, and we&#39;re using that functionality in netlab. Have to fix the blog post.</p>\n",
               "id": "2674",
               "name": "Ivan Pepelnjak",
               "pub": "2025-06-19T17:10:32",
               "ref": "2673",
               "type": "comment"
            }
         ],
         "date": "19 June 2025 05:03",
         "html": "<p>Arista also has a method for renaming interfaces (the documentation appears to be behind a login, but search &quot;Arbitrary Interface Mapping on vEOS &amp; cEOS&quot;).</p>\n\n<p>It does help with testing some things, but with the differences between software and hardware forwarding even if it accepts all the commands a &#39;digital twin&#39; that actually validates behavior will continue to be a pipe dream.</p>\n",
         "id": "2673",
         "name": "Charles Monson",
         "pub": "2025-06-19T17:03:48",
         "type": "comment"
      },
      {
         "date": "19 June 2025 07:51",
         "html": "I agree: building a full network twin is often unrealistic.<br />\n\n<p>Still, I&rsquo;d love to get your take on Google&rsquo;s approach in its Autonomous Network Operations Framework. From what I understand, their &ldquo;digital twin&rdquo; is essentially a data model built from configs, telemetry, and other network data. They use it to verify intent and predict issues without simulating the control plane at all. \nDid I get that right, and what&rsquo;s your perspective on that approach?</p>\n",
         "id": "2675",
         "name": " Oswaldo Lamothe",
         "pub": "2025-06-19T19:51:34",
         "type": "comment"
      },
      {
         "comments": [
            {
               "date": "20 June 2025 07:11",
               "html": "<p>So glad to hear it worked for you. You had a perfect use case -- a reasonably sized device instance (cRPD) and a focus on routing protocols.</p>\n",
               "id": "2679",
               "name": "Ivan Pepelnjak",
               "pub": "2025-06-20T19:11:00",
               "ref": "2677",
               "type": "comment"
            }
         ],
         "date": "20 June 2025 05:25",
         "html": "<p>I built a rather cumbersome set of scripts to create a containerlab topology from our Netbox instance to simulate our production network.  Based on Linux containers and crpd instances so resource usage is reasonable.</p>\n\n<p>Once spun up I could run our normal automation against the lab instances to get them configured.  Took some fake dns and a bit of messing with the interface names but it works.</p>\n\n<p>Obviously it can&#39;t simulate everything, but I get routing tables that <em>exactly</em> match what we see in production, which allows me to tinker with protocols, policies, link costs or whatever and see <em>exactly</em> what the results would be.  A lot of work and the scope is obviously limited, but it&#39;s been very useful for us.</p>\n",
         "id": "2677",
         "name": "Cathal Mooney",
         "pub": "2025-06-20T17:25:26",
         "type": "comment"
      },
      {
         "comments": [
            {
               "date": "20 June 2025 07:13",
               "html": "<p>What you&#39;re mentioning is a completely different use case -- it&#39;s not recreating an existing network but more like a &quot;proof of concept&quot;. A virtual environment is the perfect place to do that, unless you require a realistic data-plane implementation or performance.</p>\n",
               "id": "2680",
               "name": "Ivan Pepelnjak",
               "pub": "2025-06-20T19:13:10",
               "ref": "2678",
               "type": "comment"
            }
         ],
         "date": "20 June 2025 06:03",
         "html": "<p>Well. I think another need for digital twins is performance optimization. In practice we usually build smaller versions of the system and then increase. Arguably it could be better to design the system in a virtual environment and try to perform some optimizations before the real system exists... </p>\n",
         "id": "2678",
         "name": " Flavio Castro",
         "pub": "2025-06-20T18:03:49",
         "type": "comment"
      },
      {
         "date": "04 July 2025 06:39",
         "html": "<p>It&#39;s interesting we have fully functional digital flight simulators for modern aircrafts, but networking has been left behind significantly in this direction.</p>\n\n<p>Is the underlying problem with the tech or intent ?</p>\n\n<p>Obviously vendors won&#39;t care much since most environments are multi-vendor or unless you are a vendor specific house.</p>\n\n<p>While Veriflow got taken over by VMware/Broadcom long time ago and didn&#39;t hear anything about them ever since, would you like to share you thoughts on Forward Networks and IP Fabric in this area please ?</p>\n",
         "id": "2699",
         "name": "A Network Artist",
         "pub": "2025-07-04T06:39:22",
         "type": "comment"
      }
   ],
   "count": 5,
   "type": "post",
   "url": "2025/06/digital-twins-powerpoint-reality.html"
}
