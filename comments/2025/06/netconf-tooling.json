{
   "comments": [
      {
         "date": "04 June 2025 08:51",
         "html": "<p>There&#39;s been some efforts to try and make YANG models more consumable and usable within python based automation workflows. Check out https://github.com/pydantify/pydantify - a python library which converts YANG models into pydantic models.</p>\n\n<p>Example converted models for SR Linux: https://github.com/srl-labs/pydantic-srlinux</p>\n\n<p>Still a bit experimental and it isn&#39;t able to support all features of YANG models, but there is certainly some motivation within the network automation community to try and come up with better tooling for YANG models.</p>\n",
         "id": "2650",
         "name": " dpeach",
         "pub": "2025-06-04T08:51:21",
         "type": "comment"
      },
      {
         "date": "04 June 2025 09:01",
         "html": "<p>With the AI boom, I wrote some a tool (WIP) that uses gnmi to retrieve data from the devices (I used pygnmi https://github.com/akarneliuk/pygnmi under the hood) and yes, it was painful. </p>\n\n<p>The easiest way I found to work on it, was to find a working model and then review the structure I got from the device. So many gnmi calls just exploring what happens if I send this xpath or that xpath.</p>\n\n<p>Talking about tools, I like gNMIc https://gnmic.openconfig.net/ and the ecosystem around it. Seem solid.</p>\n\n<p>On DevNet you can also find the Cisco Metrics Search Engine https://developer.cisco.com/cmse/ which is nice, but I&#39;m afraid the team might remove it after the lead for the tool was impacted by the last LR (if you like it or not, please share your feedback)</p>\n\n<p>If you work with IOS-XR you can find the yang navigator at https://cfnng.cisco.com/ios-xr/yang-explorer/view-data-model</p>\n\n<p>Disclaimer, I work for Cisco.</p>\n",
         "id": "2651",
         "name": "Jesus Illescas",
         "pub": "2025-06-04T09:01:03",
         "type": "comment"
      },
      {
         "date": "04 June 2025 08:15",
         "html": "<p>While not maintained anymore, ANX (https://github.com/cisco-ie/anx) still does what&#39;s it&#39;s supposed to do: connects to the device, retrieves yang paths, can simply retrieve paths for telemetry, subscribe to paths and test Netconf payloads</p>\n",
         "id": "2648",
         "name": " Fred Cuiller",
         "pub": "2025-06-04T08:15:40",
         "type": "comment"
      },
      {
         "date": "04 June 2025 02:18",
         "html": "<p>Rob Shakir was instrumental in getting YANG on the map in the open-source world, but the whole subject is a monster and much more than any one person can sustain alone.  Network to Code put in a hell of an effort on YANG tooling with David Barroso&#39;s help a few years ago.  I was super excited about it myself, but it wasn&#39;t meant to be.</p>\n\n<p>The subject feels a lot like formal methods to me.  It&#39;s a powerful tool, but you have to have pretty specific problems to need it.  And only a small number of the people with those specific problems will see the light and actually benefit from the tool.</p>\n\n<p>The reality is that many orgs still live in is a morass of Jinja templates and YAML masquerading as &quot;infrastructure as code&quot;.  Features always win over reliability and sustainability, and it&#39;s still hard to find an engineer who can spell t-e-s-t.</p>\n",
         "id": "2652",
         "name": " Daniel Justice",
         "pub": "2025-06-04T14:18:40",
         "type": "comment"
      },
      {
         "date": "04 June 2025 07:26",
         "html": "<p>We&#39;ve used YGOT successfully with JunOS and IOS XE, which surprisingly, wasn&rsquo;t mentioned in the list. We submit the resulting JSON payloads via RESTCONF without issues (*).</p>\n\n<p>A quick intro to YGOT: https://github.com/nleiva/go-yang-basics?tab=readme-ov-file#practical-yang-data-modeling</p>\n\n<p>(*) We use Ansible&rsquo;s URI module for this. The RESTCONF specific module has a minor issue: https://github.com/ansible-collections/ansible.netcommon/issues/702</p>\n",
         "id": "2653",
         "name": " Nicolas Leiva",
         "pub": "2025-06-04T19:26:34",
         "type": "comment"
      }
   ],
   "count": 5,
   "type": "post",
   "url": "2025/06/netconf-tooling.html"
}
