{
  "comments": [
    {
      "date": "13 January 2014 15:06",
      "html": "So, where did the &quot;Software-Defined&quot; meme come from? I think Software-Defined Radio (SDR) was first, then &quot;SDN&quot; was introduced.  Now we have Software-Defined Storage, the Software-Defined Data Center etc. etc.",
      "id": "5496506555232126905",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Simon Leinen",
      "profile": "https://www.blogger.com/profile/13848639114358999199",
      "pub": "2014-01-13T15:06:02.929+01:00",
      "ref": "6252810862053469034",
      "type": "comment"
    },
    {
      "date": "14 January 2014 08:34",
      "html": "&quot;You did notice the \u201ca sort of\u201d classification and quotes around SDN, didn\u2019t you? It\u2019s pretty obvious how the article uses \u201csoftware-defined networking\u201d to illustrate the point...&quot;<br /><br />The TR article was written by a journalist. At about the same time, McKeown gave a talk at IEEE Infocom with Software Defined Networking[1] as the title. So it wasn&#39;t just a phrase used to illustrate a point. He was  using the term to describe what they wanted to accomplish with openflow. <br /><br />1. http://yuba.stanford.edu/~nickm/talks/infocom_brazil_2009_v1-1.pdf",
      "id": "6867358451119670885",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2014-01-14T08:34:45.292+01:00",
      "ref": "6252810862053469034",
      "type": "comment"
    },
    {
      "date": "15 January 2014 06:53",
      "html": "As an early-mid career network engineer I hate the term &quot;software defined networking&quot; because it implies that the software folks will be ruling / controlling the network.  OpenFlow is an application that runs on top of a pre-existing network.  The chicken can&#39;t define the egg from which it hatched.  &quot;SDN&quot; gives software guys the idea that they can put on a network hat and take over the job of us slow network engineers.  Most network engineers I&#39;ve met were former application programmers who entered networking for the challenge (i.e. C/C++/Java got boring).  If only we could create an NDS movement - Network Defined Software :)  And haven&#39;t all networks from the beginning of silicon time been software defined; the software being IOS, Baystack, NIC drivers, etc?<br /><br />Personally I don&#39;t want my router/switch to be bossed around by a dictator controller no matter who is doing the central programming.  If the controller gets hacked or fails your whole network is dead.  I want my router/switch to be able to think independently and react appropriately to changes in network conditions.",
      "id": "596094896359758619",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Jeff Behrns",
      "profile": "http://www.jeffbehrns.com",
      "pub": "2014-01-15T06:53:27.878+01:00",
      "ref": "6252810862053469034",
      "type": "comment"
    }
  ],
  "count": 3,
  "id": "6252810862053469034",
  "type": "post",
  "url": "2014/01/how-did-software-defined-networking.html"
}