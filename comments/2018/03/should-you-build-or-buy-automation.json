{
  "comments": [
    {
      "date": "12 March 2018 13:56",
      "html": "I would also consider the $cloud vendors as a buy option.",
      "id": "4468482222414115358",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2018-03-12T13:56:13.565+01:00",
      "ref": "1597110491059004691",
      "type": "comment"
    },
    {
      "date": "12 March 2018 16:49",
      "html": "One of the best points of this article is: &quot;Every time you\u2019re facing a challenge, spend some time looking for the tools before creating your own.?<br /><br />I worked for a shop who has absolutely hellbent on doing it all themselves. While they accomplished a lot, we had daily server issues, the MTAs were not doing as much as they could do, and when someone left the company it was a little painful to pick up what they were doing. In the end, they tried a paid-for solution which ended up doing everything their home brew did, but faster and easier to manage. They were able to recycle a little bit of their code for some stuff, but the bulk of it died. Imagine if you will, having an open mind to understand someone may have already solved the problem, which would have saved that company millions over the years in payroll liabilities and productivity?",
      "id": "696095490137115150",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Robert Parten",
      "profile": "http://www.robertparten.com",
      "pub": "2018-03-12T16:49:57.745+01:00",
      "ref": "1597110491059004691",
      "type": "comment"
    },
    {
      "date": "14 March 2018 15:54",
      "html": "About the sentences: &quot;Did I mention tweaking?<br /><br />Don\u2019t. Honestly, don\u2019t. Use tools the way they were designed to be used (reading the documentation usually gives you the cluebat you need). You want to use a tool beyond what it was designed to be doing? Time to find another tool.&quot;<br /><br />It is also a valid comment for your own tools you code. If the new needs far exceed what the in place tool has been designed for, go for coding a new tool.<br /><br />Also, think about your architecture in the long run. For example, you may have developped a puppet module to manage ntp servers in the early days. Now, there are dozens of better ntp modules around, some with frequent updates and support. Don&#39;t hesitate to drop your code in favor of those, it&#39;ll reduce your maintenance burden.",
      "id": "8579037274107186805",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Claer",
      "profile": "https://claer.github.io",
      "pub": "2018-03-14T15:54:43.938+01:00",
      "ref": "1597110491059004691",
      "type": "comment"
    }
  ],
  "count": 3,
  "id": "1597110491059004691",
  "type": "post",
  "url": "2018/03/should-you-build-or-buy-automation.html"
}