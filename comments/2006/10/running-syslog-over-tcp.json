{
  "comments": [
    {
      "date": "25 October 2007 17:37",
      "html": "Hi,<BR/>So IOS implements standard syslog stream over TCP but do you happen to know how the syslog server receiving the messages knows where a message stops and one another starts? Because with UDP you know that when you receive something, you only have one message. As for TCP you could have several messages next to each other. Is there for example an EOL character between 2 messages or something else?<BR/>Cheers,<BR/>  Hank",
      "id": "7476589279206696452",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2007-10-25T17:37:00.000+02:00",
      "ref": "116133795468537980",
      "type": "comment"
    },
    {
      "date": "31 October 2007 10:21",
      "html": "Also Cisco IOS Software Releases 12.4 T implements \"Reliable Delivery and Filtering for Syslog\"<BR/>http://www.cisco.com/en/US/products/ps6441/products_feature_guide09186a00807883c3.html",
      "id": "5886161593455227075",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2007-10-31T10:21:00.000+01:00",
      "ref": "116133795468537980",
      "type": "comment"
    },
    {
      "date": "31 October 2007 16:52",
      "html": "While it's commonly believed that TCP is a pure stream service, it's usually true that a single socket <I>write</I> results in all the data being returned from a single socket <I>read</I> call on the other side of the TCP session (assuming the application's receive buffer is big enough). That's the \"mechanism\" IOS is using. Each <I>syslog</I> message is sent in a separate TCP packet (there are no extra separators), so the recipient (usually) gets them one-by-one. Of course this mechanism is not 100% reliable.<BR/><BR/>The <I>syslog</I> daemon like Kiwi can split the stream into messages based on what gets returned from a single <I>read</I> call (that's how Kiwi works). Additionally, Kiwi can recognize various separators (CR, CRLF, LF, NULL). In theory, you could also identify the start of a properly formatted <I>syslog</I> message, as they all have to start with &lt;digit digit digit&gt; sequence, but this method is not reliable either. If you want a completely reliable solution, you should use BEEP (but I don't think there are too many syslog daemons out there supporting it).",
      "id": "8334149148441375232",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Ivan Pepelnjak",
      "profile": "https://www.blogger.com/profile/13457151406311272386",
      "pub": "2007-10-31T16:52:00.000+01:00",
      "ref": "116133795468537980",
      "type": "comment"
    },
    {
      "date": "05 August 2008 15:49",
      "html": "Hum, ok, thanks for the useful info!",
      "id": "794881829747192978",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2008-08-05T15:49:00.000+02:00",
      "ref": "116133795468537980",
      "type": "comment"
    }
  ],
  "count": 4,
  "id": "116133795468537980",
  "type": "post",
  "url": "2006/10/running-syslog-over-tcp.html"
}