{
  "comments": [
    {
      "date": "14 November 2013 09:32",
      "html": "great post! so eventually this is the thing people wanted from private vlans, besides the vlan scaling limitation, the administrative night mare, the finer granularity etc...<br /> ",
      "id": "1359977235749932543",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Gernot Nusshall",
      "profile": null,
      "pub": "2013-11-14T09:32:44.666+01:00",
      "ref": "5657288711778421420",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "14 November 2013 19:06",
          "html": "In many cases this is already happening.   For large scale datacenters and SOA type setups with lots of communication between internal applications, they don&#39;t use hardware firewalls for that, they just rely on host-based firewalling.  It&#39;s all automated via normal systems automation tools like Puppet/Chef/etc.   The security guys can be involved and &quot;approve&quot; the methodologies but then it&#39;s automated.  I know quite a few guys working at large scale web companies who have no security people and no dedicated hardware security devices apart from those required for PCI compliance.  <br /><br />It&#39;s a similar argument to who controls the vswitch, the network guys or the application/virtualization/etc. guys?   In the end it requires policy enforcement controlled by the SMEs.   Not a application guy deciding he wants the VM wide open or a ESX admin deciding it&#39;s easiest to just trunk all 4096 VLANs to a port than isolate things and being able to act on that.  ",
          "id": "7881582211702914022",
          "image": "https://resources.blogblog.com/img/blank.gif",
          "name": "Anonymous",
          "profile": null,
          "pub": "2013-11-14T19:06:00.846+01:00",
          "ref": "1114698539523046365",
          "type": "comment"
        }
      ],
      "date": "14 November 2013 14:31",
      "html": "The big question/argument is around the control of these firewalls. Will the application/infrastructure teams finally support the security of their applications? There will be a significant turf war for the control of the firewall/security instances.",
      "id": "1114698539523046365",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2013-11-14T14:31:35.257+01:00",
      "ref": "5657288711778421420",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "14 November 2013 15:11",
          "html": "It&#39;s neither - you&#39;re trying to read too much between the lines ;) It&#39;s just my view of the long-term direction we should be taking (until PaaS takes over and IaaS becomes history, at which point we&#39;ll probably have the same arguments one layer higher in the stack).",
          "id": "595546798949741176",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2013-11-14T15:11:51.088+01:00",
          "ref": "1201946546759630850",
          "type": "comment"
        },
        {
          "date": "14 November 2013 15:34",
          "html": "i didn&#39;t read anything into it. i&#39;m not that bright. i just didn&#39;t get the gist of the post. ;)",
          "id": "8421454037833696959",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Unknown",
          "profile": "https://www.blogger.com/profile/13046728001822941225",
          "pub": "2013-11-14T15:34:59.619+01:00",
          "ref": "1201946546759630850",
          "type": "comment"
        }
      ],
      "date": "14 November 2013 14:56",
      "html": "it&#39;s not clear to me whether this is a lob at automated policy enforcement (and a discussion of vendor products in this space) or whether this is a half opening for a discussion around actual application level hosting and virtualization technologies that go to finer levels of virtualization granularity than VMs.  ",
      "id": "1201946546759630850",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Unknown",
      "profile": "https://www.blogger.com/profile/13046728001822941225",
      "pub": "2013-11-14T14:56:50.083+01:00",
      "ref": "5657288711778421420",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "23 November 2013 19:54",
          "html": "Who says the firewall rules would need to be that complex? It sounds to me like you&#39;ve leapt to the idea that an application specific firewall would need to totally secure that application, but that needn&#39;t be the case if it isn&#39;t today.<br /><br />The main benefit of application specific firewalls is that they are applied over a smaller scope, so they are more understandable /and/ understandable in isolation (assuming source and destinations are referenced by zone/tenancy and not by IP address - see below). I&#39;d argue that the majority of centralised firewall policies today are not only full of security holes, but because the scope they cover is so big (and because an IP address is only a loose binding to a machines identity) they are also impossible to audit and discover those holes.<br /><br />Additionally I think a huge amount of firewall additions and changes are due to the deployment and movement of machines. These only cause firewall rule changes because the rules reference the machine by IP address and not by security zone/tenancy. In a zone/tenancy based setup all that would be required would be to assign the new machine to the correct zone. Re-addressing a machine should require no more work than simply re-addressing it.<br /><br />Finally I think this sort of model can lead to a new way of applying security rules. At the moment it&#39;s very ad-hoc, particularly when moving from a loosely firewalled dev environment into production. If this security model was already applied in the dev environment then the zone based rules would be built as part of the development process. When it comes to move it into production the &quot;ruleset&quot; to be audited would already exist, and could look like this:<br /><br />WebServers -&gt; Application Servers: HTTP, HTTPS<br />Application Servers -&gt; Database Servers: MySqL<br />+generic admin rules<br /><br />The policy is easily auditable without any reference to physical infrastructure or IP addresses. Even security professionals with limited networking knowledge can track the flows. If the production policy later requires a change then this request is no longer an ad hoc request to a firewall support team who implement it blindly. Instead it&#39;s a request to the security team for an amendment to production policy. Addition, removal, or movement of machines requires no policy amendments at all.<br /><br />Why wouldn&#39;t we want this architecture? I&#39;ve been waiting for it for _years_.<br />",
          "id": "6242244034483947407",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Sam Stickland",
          "profile": "https://www.blogger.com/profile/16576239659380574562",
          "pub": "2013-11-23T19:54:46.870+01:00",
          "ref": "8084326343812764738",
          "type": "comment"
        }
      ],
      "date": "18 November 2013 18:38",
      "html": "A competent security team would agree with this approach. I don&#39;t see it as scalable or sustainable. I&#39;ve seen business units using the cloud simply because they don&#39;t need to go through the hurdles of requesting firewall rules between components in their app and services provided by existing apps on the network. In a world where everyone is demanding auto-provisioning and self-service, I don&#39;t see how you could have every tiered app in its own security silo. My new app, having multiple dependencies on multiple services, would need a dozen drop-down selections to make sure that the orchestrator opens the access through multiple security groups. Then, I imagine each of those security requests will need approval before the orchestrator deploys? In a perfect security world, everything is protected; but that almost ALWAYS means process and approval overhead, which frustrates the business units that are generating revenue. The other end of the spectrum is wide-open and vulnerable everywhere... I think most agree that&#39;s bad. The best balance I&#39;ve seen is protecting the databases and anything categorized under regulatory compliance - the keys to the kingdom - then a relaxed policy between web/app/storage/backup tiers. Yes, a compromised system has access to other systems, but they haven&#39;t gotten to the keys. DDOS is an issue, and that can be mitigated without an insane number of firewalls everywhere. If you have the US nuclear codes on your systems, yes, this approach makes sense.<br /><br />This is just the opinion of a network architect who has seen the network support staff constantly called about connectivity issues that usually are firewall related. Your experience may be different.",
      "id": "8084326343812764738",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2013-11-18T18:38:00.288+01:00",
      "ref": "5657288711778421420",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "24 February 2017 15:00",
          "html": "#1 - You might also need a separate routing domain for each tenant. Search my blog for related blog posts.<br /><br />#2 - Yes, you&#39;ll need something to either link the tenant networks to external networks, or provide access to common services. There are several ways to make that secure.",
          "id": "460589829523553896",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2017-02-24T15:00:06.431+01:00",
          "ref": "4849454937809774281",
          "type": "comment"
        }
      ],
      "date": "23 February 2017 19:21",
      "html": "Hi Ivan,<br />Needed your clarification on a couple of queries i had<br />1. When you mean each application as a tenant, i believe that you are mentioning about firewalls and security policies.<br />2. Elsewhere in this site, you have kind of indicated that each tenant will have a separate routing table. Now if that&#39;s the case how will the different tiers talk to each other. For example if the web server is in a VRF and the database server/application server is in another VRF, then how will the web server talk with the other servers? The reason being IP routing happens in the context  of the VRF only. So for the above to happen, we may need a device (Switch/Router) which is shared among all these tenants and can do routing between them. Basically so the benefit is just in the isolation of having a separate routing table for that tier, but eventually somewhere in the network that isolation has to go away for routing to happen.<br /><br />Please let me know your thoughts.<br /><br />Sincerely,<br />Sudarsan.D",
      "id": "4849454937809774281",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Sudarsan",
      "profile": "https://www.blogger.com/profile/13569391474860461806",
      "pub": "2017-02-23T19:21:56.236+01:00",
      "ref": "5657288711778421420",
      "type": "comment"
    }
  ],
  "count": 10,
  "id": "5657288711778421420",
  "type": "post",
  "url": "2013/11/make-every-application-independent.html"
}