{
  "comments": [
    {
      "date": "04 December 2013 19:07",
      "html": "The keyword here is &quot;simplify.&quot;  We must define, clearly, what base firewall and load-balancer functionality means, then define the data (configuration and state) used to manage the firewalls.  Not only will this simplify mgmt, but it lends itself to automatability.   Or whatever the right word there is.",
      "id": "984518653394289636",
      "image": "https://2.bp.blogspot.com/-s2SO4-r0rb4/TjN1afzbxzI/AAAAAAAAAEI/GJY8m3X_G4Q/s32/278323_2250510072972_1554840083_32414519_195982_o.jpg",
      "name": "Derick Winkworth",
      "profile": "https://www.blogger.com/profile/15412047994121954944",
      "pub": "2013-12-04T19:07:39.079+01:00",
      "ref": "5809796511373810734",
      "type": "comment"
    },
    {
      "date": "04 December 2013 20:34",
      "html": "Spot on Ivan. To me every technology and idea in networking today is most likely a transitive technology. Yes today in the firewall world this is tough to architect but I see the light at the end of the tunnel. It is just a long tunnel. ",
      "id": "7057782524183008349",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Unknown",
      "profile": "https://www.blogger.com/profile/15141619752997437616",
      "pub": "2013-12-04T20:34:16.796+01:00",
      "ref": "5809796511373810734",
      "type": "comment"
    },
    {
      "date": "05 December 2013 16:23",
      "html": "www.dome9.com solves that problem",
      "id": "7662780879305077308",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2013-12-05T16:23:17.859+01:00",
      "ref": "5809796511373810734",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "06 December 2013 01:26",
          "html": "In glad you mentioned this as I was about to say the same thing. In curious to know how Ivan reconciles the &quot;any web server to any SQL server&quot; approach  with the &quot;per service tenant&quot; approach. Perhaps he is talking in this context in which case all web servers means &#39;all web servers for that particular service&#39; and not &#39;all web servers in your domain?",
          "id": "5564866622217510518",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Unknown",
          "profile": "https://www.blogger.com/profile/11113317703418023644",
          "pub": "2013-12-06T01:26:48.029+01:00",
          "ref": "1017174828137194708",
          "type": "comment"
        },
        {
          "date": "06 December 2013 05:08",
          "html": "Is my English really that bad ... or is the idea so outlandish? I wrote &quot;in an appliance-per-application world the rules become simpler&quot;. Of course I meant &quot;all web servers of a particular application&quot;",
          "id": "4988563474913778466",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2013-12-06T05:08:39.678+01:00",
          "ref": "1017174828137194708",
          "type": "comment"
        },
        {
          "date": "06 December 2013 08:55",
          "html": "My apologies, Ivan, I obviously overlooked that critical  statement. Having said that, most security auditors will question why web server X can access web sql server Y if thexplicitly require it as they are usually single mindedly focused on reducing the attack surface area, regardless of other mitigations or other pragmatic considerations.",
          "id": "4148219718594596903",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Unknown",
          "profile": "https://www.blogger.com/profile/11113317703418023644",
          "pub": "2013-12-06T08:55:16.884+01:00",
          "ref": "1017174828137194708",
          "type": "comment"
        },
        {
          "date": "06 December 2013 08:58",
          "html": "Apologies for typos, editing on mobile devices isn&#39;t great. That should read &quot;if they don&#39;t explicitly require it&quot;.",
          "id": "558092676236318514",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Unknown",
          "profile": "https://www.blogger.com/profile/11113317703418023644",
          "pub": "2013-12-06T08:58:56.258+01:00",
          "ref": "1017174828137194708",
          "type": "comment"
        }
      ],
      "date": "05 December 2013 16:54",
      "html": "The &quot;simplify&quot; idea is really the key here, the only little problem is that it is in direct contradiction to the security/audit team requirements. It is them who want to have the fw rules as tight as possible. For example it is impossible for them to have one simple rule to &quot;allow all web frontends to talk to all sql backends&quot;<br />You might say the exposure will be smaller with small per-application appliances, which is true, but still not enough for security/audit team. Anything looser is unacceptable for them, so convincing them otherwise will be hard. ",
      "id": "1017174828137194708",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Unknown",
      "profile": "https://www.blogger.com/profile/16288714683399246533",
      "pub": "2013-12-05T16:54:45.972+01:00",
      "ref": "5809796511373810734",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "06 December 2013 12:20",
          "html": "I don&#39;t think this will require an &#39;any any&#39; rule, just a specific well defined group to be allowed access to another specific well defined group, albeit not everything in the first group would need access to everything in the second.<br /><br />Despite my comments above, I am very much in favour of an approach along these lines. What we are looking at is a step towards this goal which is not to have per-service firewalls (at least not yet) but to have per-environment firewalls and in some cases, several pairs of firewalls per environment. This is a half way house between monolithic firewalls and per-service firewalls. We are also using templated rules which get applied to servers when needed, rather than a blanket allow rule between web tier and app tier etc. <br /><br />One of the issues with per-service firewalls (and this is purely a management/housekeeping issue, rather than a technical one) stems from the difficulty it is in getting people to agree to decommission systems. Service owners like to keep systems running &#39;just in case&#39; or because they have re-used them for some other unrelated task. This behaviour often contributes to VM sprawl and is likely to lead to firewall sprawl too, with its associated licensing and management overhead. But as I say, this is a management issue and if you can get to grips with that, then it is no longer a barrier.<br /><br />The bigger barrier is the security auditor wanting to reduce the surface area of attack and consequently putting the brakes on such a per-service firewall deployment with broad rules for comms between server types. Again, I have tried to address this by making the case that if a single server has been compromised, you have to assume the whole service in that environment has been compromised. With such a perspective, it doesn&#39;t matter that the compromised web server can access an app server it doesn&#39;t strictly need to because the sysadmins focus should be on detection of the incident and locking it down whilst relying on other multi-layer security measures to mitigate the impact in the meantime. Obviously, any critical service would have redundancy/resilience built in and so you would keep the service alive through your secondary system during the lockdown of your primary.<br /><br />In conclusion, I think Ivan&#39;s point is valid, it just requires all parts of your team (including auditors) to take a similar pragmatic approach.",
          "id": "1668005068470305692",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Unknown",
          "profile": "https://www.blogger.com/profile/11113317703418023644",
          "pub": "2013-12-06T12:20:38.149+01:00",
          "ref": "87522056116177263",
          "type": "comment"
        }
      ],
      "date": "06 December 2013 04:10",
      "html": "&#39;Simplify&#39; while deploying hundreds of firewalls. <br /><br />I can&#39;t imagine any security audit is going to allow an &#39;any any&#39; rule through their gateways.<br /><br />And &#39;let your application team manage the firewall&#39;. mmmmhmmm.",
      "id": "87522056116177263",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2013-12-06T04:10:12.738+01:00",
      "ref": "5809796511373810734",
      "type": "comment"
    },
    {
      "date": "10 December 2013 07:34",
      "html": "In IAAS systems such as AWS and Apache CloudStack, security groups offer scalable isolation like you mention. Instead of virtual firewalls, we can use the hypervisor&#39;s firewall capabilities (iptables in Xen/KVM). Apache CloudStack can comfortably manage tens of thousands of firewalls and hundreds of thousands of firewall rules (see http://www.slideshare.net/chiradeep_v/scalable-networking-in-apache-cloudstack slides 32-41)",
      "id": "5753326389508525471",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2013-12-10T07:34:17.218+01:00",
      "ref": "5809796511373810734",
      "type": "comment"
    },
    {
      "date": "11 December 2013 21:24",
      "html": "I feel that security thinking does need to evolve along with the technology. The business is pushing for self-service, automation, and instant provisioning - and in most cases there is a business driver behind it - so it&#39;s becoming a requirement, not a nice-to-have.<br /><br />I&#39;ve been involved in some tire-kicking on both public and private cloud for an enterprise. Inevitably, security is running around behind the network architecture trying to plug holes. Yes, the developers are getting the instant provisioning and shorter delivery times to the market/customer. Then an auditor comes in and the security group has to clean up. When they are done, some people are frustrated because now they have to follow a process to allow new connectivity whereas it used to &quot;just work&quot;.<br /><br />Again, I think Ivan&#39;s previous suggestion of making every app a tenant is good. Multiple virtual firewalls as mini point solutions can also be good. But here are some real challenges:<br /><br />1. Some developers don&#39;t know what all of the dependencies of their app are. I can&#39;t tell you how many times they build an app, request the firewall exceptions, and spend a week amending them because they forgot that this app calls some other middleware piece.<br />2. Virtualized appliances are great, but they still are constrained to Layers 1-7, and in many cases, still constrained to Layers 1-4. If we are dealing with large, flat networks or even huge IPv6 networks, you will have databases, apps, web and other things landing all over the IP space. Yes, you can put things in security groups or whatever your orchestrator uses to define security policies, but a lot of appliances don&#39;t recognize security groups. They still look for this IP talking on this port, etc... If the security groups could be tagged and if the appliances understood these tags, you could land databases wherever, and have the correct policies applied automatically. For most things<br />3. Legacy. Some of these new, whizbang environments will contain servers that talk to servers in old, tired legacy environments. We see them autoprovisioning in the private/hybrid cloud quickly and automatically... then they need it to pull from a data warehouse somewhere and now it&#39;s back to the security request.<br /><br />one more time, I think this is the right direction but I sincerely think there needs to be some technological breakthroughs before we are there.<br /><br />CWB",
      "id": "4369043982018590533",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2013-12-11T21:24:00.576+01:00",
      "ref": "5809796511373810734",
      "type": "comment"
    },
    {
      "date": "24 December 2013 02:51",
      "html": "guys, as everyone knows, money/profitability always comes first. And people only think about security when  there has been a huge breach (and even then think about it temporarily and then go back to before)<br /><br />&#39;let your app team  (or sometimes end user) manage their own firewall&#39; is the principle behind all cloud offerings, which is why they are the Largest &#39;Hack Me&#39; networks of all time.<br />",
      "id": "5769583329834077256",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2013-12-24T02:51:04.548+01:00",
      "ref": "5809796511373810734",
      "type": "comment"
    }
  ],
  "count": 13,
  "id": "5809796511373810734",
  "type": "post",
  "url": "2013/12/omg-who-will-manage-all-those-virtual.html"
}