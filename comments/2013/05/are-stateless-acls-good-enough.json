{
  "comments": [
    {
      "date": "13 May 2013 18:34",
      "html": "The 2 (Private) VLAN solution with F5 packet filters was good for us when the ASAs on \u00a0the public network edge were simply no match for the LoadBalancers they were\u00a0protecting! Additionally, we had stateful firewalls sitting on the internal VLANs restricting access to the back-end servers. Of course you want to be careful that the backend doesn&#39;t \u00a0simply become a new bottleneck - use aggressive caching, and size appropriately, etc.\u00a0<br /><br />-mike<br />",
      "id": "7703456341807191689",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "MikeT",
      "profile": null,
      "pub": "2013-05-13T18:34:59.473+02:00",
      "ref": "7900452021390513671",
      "type": "comment"
    },
    {
      "date": "14 May 2013 03:22",
      "html": "Great post yet again.  Tough to imagine the firewall ever going away.  Is Goldman proposing that all of their internet facing servers software will always run stronger than a firewall appliance?  What about their WAN/Business only servers?  They are also all going to run software that will be prided over what a firewall offers?  That seems like a huge risk/undertaking/investment/risk/admin nightmare.",
      "id": "2036797409053185181",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2013-05-14T03:22:33.480+02:00",
      "ref": "7900452021390513671",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "14 May 2013 06:38",
          "html": "75 seconds timeout for a half-open connection is an insane ammount of time. A decent SYN flood could annihilate the firewall, depleting it&#39;s memory.<br />And I still don&#39;t get your idea. If the attacker has access to tcpdump on a server, allowing him to gain knowledge of the server&#39;s ISN, why bother with spoofing? He&#39;s already rooted the server, he can do anything.<br /><br />Even after establishing the TCP session, he won&#39;t be able to see return packets by means other than continuous tcpdump updates, and to get them, he has to connect to the server from a real address. So why the heck would you need spoofing in the first place?",
          "id": "8576339424381118018",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Dmitriy",
          "profile": "https://www.blogger.com/profile/06090398639164774159",
          "pub": "2013-05-14T06:38:33.711+02:00",
          "ref": "9055802388408665877",
          "type": "comment"
        },
        {
          "date": "14 May 2013 12:37",
          "html": "75 seconds is the amount of time servers tend to wait for SYN/ACK on outbound connections they&#39;ve initiated. Firewalls probably drop state significantly sooner. I agree about the firewall state table - that&#39;s the crux of the argument against stateful firewalls: Don&#39;t use them if you don&#39;t know what traffic to expect.<br /><br />The spoofing comment is not a whole-hog attack approach, just an interesting tidbit about circumventing ACLs with &#39;established&#39; keyword. Because &#39;established&#39; passes traffic with ACK bit set, the only thing it drops is the first SYN in the handshake. As long as we have a way to lob that single segment over the ACL (like with a telephone and a friend running scapy, perhaps?), we can communicate through an ACL where &#39;established&#39; would otherwise have blocked us. No need for tcpdump nonsense after the first segment.",
          "id": "3383985570848985301",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "chris marget",
          "profile": "https://www.blogger.com/profile/06646973209424821070",
          "pub": "2013-05-14T12:37:18.152+02:00",
          "ref": "9055802388408665877",
          "type": "comment"
        },
        {
          "date": "14 May 2013 15:11",
          "html": "Stateful firewalls are almost a &quot;must&quot; anyway. the question is choosing the right model.<br /><br />The problem is getting the first SYN through. I&#39;ve honestly no idea how to do that. Spoof from behind the stateless firewall? Once again, if you can do that, you probably don&#39;t need to penetrate the firewall.",
          "id": "5934851999310155024",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Dmitriy",
          "profile": "https://www.blogger.com/profile/06090398639164774159",
          "pub": "2013-05-14T15:11:07.854+02:00",
          "ref": "9055802388408665877",
          "type": "comment"
        },
        {
          "date": "14 May 2013 21:39",
          "html": "I can&#39;t get on board with the &quot;stateful firewalls are a must&quot; line of thinking if we&#39;re talking about putting them in front of a server farm.<br /><br />Traditional stateful firewalls are going to be susceptible to DoS attack by exhausting their state tables.<br /><br />Batshit-crazy TCP-proxy firewalls are resistant to this particular DoS attack, but have other problems relating to the MiTM attack they perform on every incoming connection.<br /><br />There&#39;s a great NANOG thread from January 2010: &quot;I don&#39;t need no stinking firewall!&quot;<br /><br />It explains well why stateful firewalls shouldn&#39;t frontend a server farm.<br /><br />Yes, the first SYN is the problem. But it doesn&#39;t need to go *through*. That&#39;s what makes it interesting. Whether or not an attacker has this need is not for us to say. Maybe it&#39;s for data exfiltration? Maybe it&#39;s post-compromise lateral movement? I just mention it to illustrate that &quot;established&quot; might not be as robust as folks assume.",
          "id": "5556899884648161264",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "chris marget",
          "profile": "https://www.blogger.com/profile/06646973209424821070",
          "pub": "2013-05-14T21:39:16.332+02:00",
          "ref": "9055802388408665877",
          "type": "comment"
        }
      ],
      "date": "14 May 2013 04:17",
      "html": "There are fun workarounds for the established keyword. So long as you&#39;ve got some way to communicate to a conspirator, he can spoof the first packet in the flow, allowing the rest to work correctly.<br /><br />We&#39;re a webserver in this scenario, right? We&#39;d just need to feed tcpdump into a web-accessible file, and have our partner system scrape the log for our SYN packets that would have been dropped.<br /><br />SYN/ACK reply traffic (initiated by the partner spoofing our address) passes the established test, allowing 3-way handshake to complete. TCP setup timeout is usually 75 seconds, I think. Plenty of time to pull off this attack.",
      "id": "9055802388408665877",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "chris marget",
      "profile": "https://www.blogger.com/profile/06646973209424821070",
      "pub": "2013-05-14T04:17:58.792+02:00",
      "ref": "7900452021390513671",
      "type": "comment"
    },
    {
      "date": "16 May 2013 14:48",
      "html": "If you have linux, you can put stateless rules on your server. It is very robust, but a bit touchy to setup properly.<br /><br />However, people tend to forget about spoofed datagrams.<br />We should put more simple anti-spoofed ACLs on every gateway.<br /><br />",
      "id": "4267591701591477526",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "xavier nicollet",
      "profile": null,
      "pub": "2013-05-16T14:48:32.216+02:00",
      "ref": "7900452021390513671",
      "type": "comment"
    }
  ],
  "count": 8,
  "id": "7900452021390513671",
  "type": "post",
  "url": "2013/05/are-stateless-acls-good-enough.html"
}