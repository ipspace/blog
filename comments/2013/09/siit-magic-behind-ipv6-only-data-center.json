{
  "comments": [
    {
      "comments": [
        {
          "date": "22 September 2013 10:10",
          "html": "Hi SJ,<br /><br />You can certainly do that. Except that you&#39;d end up using the same 96-bits prefix for both source and destination (not 64:ff9b::/96 and 2001:db8::/96 at the same time) you describe is actually &quot;vanilla&quot; SIIT operation, and it&#39;s exactly what happen if you do not have a static mapping in place for either the source or the destination. The static mapping feature is not defined in the SIIT RFC, it&#39;s actually my idea of a &quot;value-add&quot; feature.<br /><br />I&#39;ll explain why. In your example above, the server must be configured with a secondary address 64:ff9b::192.51.0.10/128 (in addition to its primary 2001:db8::1/64 one). You must to that so that it will actually respond to traffic destined to that address. The sysadmin responsible for the server must additionally ensure that any software (web servers etc) are configured to accept application traffic to this secondary address, it must be added into any HA/fail-over software, any firewall rules for the public service must be duplicated so that traffic is allowed to both the primary address for native IPv6 clients and the secondary address for translated IPv4 clients, you&#39;ll need to set up monitoring and SLA reporting for service availability on both addresses, and so on, and so on. Also, none of this can be done until the network administrator actually assigns the IPv4 address from the pool, because until that point the &quot;IPv4-Mapped IPv6 Address&quot; (as it&#39;s properly known as) isn&#39;t known.<br /><br />The network administrator, on the other hand, must ensure this /128 is actually routed to the server in question. The obvious way to do that, is to set up a static route on the server&#39;s default gateway to the /128 using the primary/native address (2001:db8::1) as the next-hop. This route must then be imported into the IPv6 IGP so that it is reachable throughout the IPv6 network. You&#39;ll end up with one such /128 host route in your IPv6 IGP for each translated IPv4 service network, and configuration that needs to be pushed to every device that is operating as a default gateway for a system being made available through SIIT.<br /><br />At least in my organisation, this is a lot of extra complexity. It&#39;s reminiscent of dual stack, actually. Because of this, I consider the static mapping feature a much more elegant end manageable solution. The server operator will only have to deal with native IPv6. The firewall operator will only have to add rules for the server&#39;s native IPv6 address. You&#39;ll only have to monitor that address. The IPv6 networks remains free of a bunch of external /128 IGP routes, and so on and so on.<br /><br />The work flow I picture is one where the server guys just sets up everything on IPv6, and when they&#39;re done, puts in an order \u00e0 la: &quot;I&#39;ve just set up public internet services on 2001:db8::80, 2001:db8::443, and 2001:db8:babe::, please give me IPv4 frontend service for those&quot;. Then the network/SIIT operator will find three free IPv4 service addresses and set up static mappings for them, push them to the translator boxes, and that&#39;s it.<br /><br />When I think about it, I seem to recall having been told that there is some Brocade router or load balancer that can do this dynamically - when receiving a packet destined for an IPv4 service address for the first time, it&#39;ll do a reverse DNS lookup to find the hostname, then look up the hostname and see if there&#39;s an AAAA record. If so, it installs a mapping between the two.<br /><br />Anyway, as I said earlier, you can certainly use &quot;vanilla&quot; SIIT instead if you prefer. I did so myself, before I got my hands on a SIIT implementation that had the static mapping extension included. Ivan blogged about this last year:<br /><br />http://blog.ipspace.net/2012/05/ipv6-only-data-center-built-by-tore.html<br />http://blog.ipspace.net/2012/10/skip-transitions-build-ipv6-only-data.html<br /><br />The latest post also contains a link to my RIPE presentation about the doing this in &quot;vanilla&quot; SIIT mode.<br /><br />Tore",
          "id": "4840558915649589351",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Tore Anderson",
          "profile": "https://www.blogger.com/profile/06190251385478958186",
          "pub": "2013-09-22T10:10:09.942+02:00",
          "ref": "8770537767580866657",
          "type": "comment"
        }
      ],
      "date": "22 September 2013 00:43",
      "html": "Ivan,<br /><br />   Why there is a translation in only one direction.<br /><br />Why not translate in both directions. e.g.<br /><br />  Sender Host             SIIT Gateway<br />Src: 203.0.113.50         64:ff9b::203.0.113.50<br />Dst: 198.51.0.10          2001:db8::192.51.0.10<br /><br />Why do we need to save the mapping for each internal server to its IPv4 address.<br /><br />Thanks,<br /><br />SJ",
      "id": "8770537767580866657",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Anonymous",
      "profile": null,
      "pub": "2013-09-22T00:43:26.223+02:00",
      "ref": "6884625682461332525",
      "type": "comment"
    }
  ],
  "count": 2,
  "id": "6884625682461332525",
  "type": "post",
  "url": "2013/09/siit-magic-behind-ipv6-only-data-center.html"
}