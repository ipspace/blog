{
  "comments": [
    {
      "comments": [
        {
          "date": "03 October 2013 21:13",
          "html": "Hi Dan!<br /><br />Thanks for the comment - reworded the intro paragraph a bit to explain my observation bias ;)<br /><br />Although I agree with you in principle, the sad fact remains: at the moment you can&#39;t mix networking solutions from multiple vendors, and even though Tail-f can manage devices from multiple vendors, you&#39;re just replacing hardware lock-in with controller lock-in.<br /><br />Need to investigate LB aspect further - would appreciate if you could point me to a reasonable starting point.<br /><br />Kind regards,<br />Ivan",
          "id": "1326842788645782914",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2013-10-03T21:13:54.187+02:00",
          "ref": "633245564327670502",
          "type": "comment"
        }
      ],
      "date": "02 October 2013 19:01",
      "html": "In my opinion this blog post is inaccurate in its assumption and incorrect in several factual areas.  <br /><br />The original design discussions around Quantum/Neutron covered this topic extensively, and as someone how was there, pretty much all of your assumptions about intent are wrong.  <br /><br />The root of the problem is confusing a Quantum/Neutron &quot;plugin&quot; (a strategy for implementing the neutron API) with a &quot;driver&quot; (a piece of code that talks to a particular back-end technology).  Your post makes this mistake by saying: <br /><br />&quot;Remember that OpenStack supports a single plugin. Yeah, you got it right \u2013 if you want to use the above architecture, you\u2019re locked into a single networking vendor.&quot;<br /><br />A single plugin does not mean you can only use a single technology.  Plugins can support drivers, as your examples above point out.  In fact, in my view, this post argues against itself, as by highlighting the value of different models like the ML2 and tail-f designs, it drives home the point that no single &quot;driver model&quot; is sufficient, hence you need pluggability at a higher layer (i.e., the plugin).  This was the exact motivation for the original design.  A user can choose a plugin (i.e., a strategy) that ties them to a particular vendor technology, or a strategy that gives them flexibility to use technologies from different vendors, often with a &quot;lowest-common denominator&quot; result.  We explained this to people so much in the early days of quantum that we even had standard back-up slides for it (see slides 36-38: http://www.slideshare.net/danwent/openstack-quantum-intro-os-meetup-32612 ).  <br /><br />The notion of a &quot;meta&quot; plugin, that enables the use of different vendor-specific technologies at once was also discussed at the original design summit for OpenStack Quantum.  It has been implemented and in the code base for a long time now.  Again, all of this stuff is publicly available information: https://blueprints.launchpad.net/neutron/+spec/metaplugin<br /><br />You should also correct your statement about services like load balancers being tied to the plugin, as from the start you were able to load LB plugins as &quot;service plugins&quot;, which are independent of the &quot;core plugin&quot; that is loaded.  ",
      "id": "633245564327670502",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "dan",
      "profile": "https://www.blogger.com/profile/12409735843167779201",
      "pub": "2013-10-02T19:01:05.666+02:00",
      "ref": "7419152090071405645",
      "type": "comment"
    },
    {
      "date": "02 October 2013 20:23",
      "html": "Nice write-up Ivan (and updates by Dan). <br /><br />Would love to also see you explore what happens when Quantum services are combined with controller-based services. Where should various policies be configured? How will they interact if someone wants to deploy NFV services that run on VMs, which have to be provision via the &quot;server&quot; services (eg. Nova, vCenter, etc.)? ",
      "id": "3271271650403737538",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Brian Gracely",
      "profile": "https://www.blogger.com/profile/07805882840622149543",
      "pub": "2013-10-02T20:23:15.287+02:00",
      "ref": "7419152090071405645",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "03 October 2013 21:15",
          "html": "Thanks for the feedback. I totally agree with you that the problem is exceedingly hard (and there aren&#39;t many successful commercial solutions out there, let alone open-source ones).",
          "id": "5795878910194938731",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2013-10-03T21:15:14.306+02:00",
          "ref": "396281932181089490",
          "type": "comment"
        }
      ],
      "date": "03 October 2013 01:42",
      "html": "I have been involved in some of the Neutron Architecture design decisions from the very beginning (April 2011) and, believe me when I said that its architecture have been reviewed by many developers and not just one developer as you suggest in this blog. There are two major factors that have driven Neutron design and development, the first one is the race with nova-network functionality and the second was the need to provide complex network topologies with only opensource software but also letting vendors to get involved and introduce their own secret sauces.<br />I do agree with Dan in most of his suggestions to your blog but I also find your point of view about multi-vendor and multi-plugin very interesting. I believe that we are targeting more than one domain in Neutron with only one plugin and therefore, it is very hard. By domain I mean PNI (Physical Networking Infrastruture) versus VNI (Virtual Networking Infrastructure). ML2 by means of drivers is putting together configuration for these two domain but I find it odd, exactly because looks messy and very difficult to debug for Cloud OpenStack Users. Services are like plugins, you can deploy many instances of the same service but only one kind of them, still some limitations but again some times those limitations are the result of providing all that functionality with opensource tools.<br />",
      "id": "396281932181089490",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Unknown",
      "profile": "https://www.blogger.com/profile/05086668992358391882",
      "pub": "2013-10-03T01:42:29.411+02:00",
      "ref": "7419152090071405645",
      "type": "comment"
    },
    {
      "date": "08 October 2013 03:04",
      "html": "Excellent article Ivan, congratulations. OpenStack networking is definitely facing a transformation as releases go by and new scenarios are dealt with. In particular, there is a proposed solution to this issue that will be presented in the next OpenStack summit in Hong Kong and I believe it\u00b4s worth checking. https://wiki.openstack.org/w/images/7/71/Dnrm-blueprint-001.pdf ",
      "id": "7770174947601558935",
      "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
      "name": "Fer",
      "profile": "https://www.blogger.com/profile/04405011817694386899",
      "pub": "2013-10-08T03:04:03.492+02:00",
      "ref": "7419152090071405645",
      "type": "comment"
    },
    {
      "date": "29 October 2013 06:08",
      "html": "Nice article Ivan. Along the same lines I (and I am sure many others) would like to see a followon article from you that analyses the potential for vendor lock-in in other similar solutions. If running the Tail-f NCS as a Neutron plug-in implies lockin to a single controller, then that would also apply to all single-vendor controllers/ orchestrators including the VMWare NSX for example ?  Would love to see an article from you that analyses the lock-in inherent with all such controller/ orchestration system based approaches. Would be interesting to know of successful deployments that have managed to avoid lockin at the controller/ orchestration level. Perhaps the answer to avoid lock-in is to run two or more separate administrative domains (if feasible), each with their own controller/ orchestration, within disjoint portions of the same enterprise/ carrier network ?<br />",
      "id": "7323911564515395548",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Sanjeev Rampal",
      "profile": "http://www.linkedin.com/pub/sanjeev-rampal/1/349/523",
      "pub": "2013-10-29T06:08:03.080+01:00",
      "ref": "7419152090071405645",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "30 June 2014 18:38",
          "html": "Have you considered asking the developers of that plugin?",
          "id": "5870864644153524985",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2014-06-30T18:38:07.894+02:00",
          "ref": "905116037679063016",
          "type": "comment"
        },
        {
          "date": "01 July 2014 09:34",
          "html": "No. Most of the SDN controller plugin documentation described how Neutron server requests configuration changes on a hypervisor using OVS sub plugin in controller plugin and they did not explain how neutron actually controls physical switches. To my understanding using sub plugin neutron can request OpenVSwitch in hypervisor for changes and the information is passed to controller. Once controller detects changes, it sends flow table entries to OVS. But how does controller know to which physical switch the nic cards of hypervisor are connected. I assume the controller is only to create and update flow tables with some additional options.",
          "id": "8126837100739089289",
          "image": "https://resources.blogblog.com/img/blank.gif",
          "name": "Thulasiram valleru",
          "profile": null,
          "pub": "2014-07-01T09:34:40.836+02:00",
          "ref": "905116037679063016",
          "type": "comment"
        },
        {
          "date": "01 July 2014 09:42",
          "html": "Hmm ... and what made you believe I might know more about Ryu controller than its authors/developers?",
          "id": "3153394952496709950",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2014-07-01T09:42:49.165+02:00",
          "ref": "905116037679063016",
          "type": "comment"
        }
      ],
      "date": "30 June 2014 16:09",
      "html": "Suppose I have Ryu controller in my environment and the switches are open flow enabled and I installed Ryu plug-in in OpenStack. When even a VM is created or a VM is moved to another hypervisor, Neutron Ryu plug-in can configure OVSDB using OVSD. But what about the hardware switches, Will Neutron plug-in configures physical switches or Ryu-controller. ",
      "id": "905116037679063016",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Thualsiram Valleru",
      "profile": null,
      "pub": "2014-06-30T16:09:23.110+02:00",
      "ref": "7419152090071405645",
      "type": "comment"
    },
    {
      "comments": [
        {
          "date": "01 July 2014 12:07",
          "html": "Ah, all of a sudden you&#39;re moving from Neutron plugin to SDN on physical gear - a totally different topic. Try ipSpace.net/SDN or sdncentral.com.",
          "id": "4846067020107056159",
          "image": "https://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35",
          "name": "Ivan Pepelnjak",
          "profile": "https://www.blogger.com/profile/13457151406311272386",
          "pub": "2014-07-01T12:07:17.622+02:00",
          "ref": "5561233680682107596",
          "type": "comment"
        }
      ],
      "date": "01 July 2014 12:04",
      "html": "Just asking what is the role of SDN controllers in physical switch world. I know how they work for Virtual switches. Want to know how they work with physical switches.",
      "id": "5561233680682107596",
      "image": "https://resources.blogblog.com/img/blank.gif",
      "name": "Thulasiram valleru",
      "profile": null,
      "pub": "2014-07-01T12:04:41.273+02:00",
      "ref": "7419152090071405645",
      "type": "comment"
    }
  ],
  "count": 13,
  "id": "7419152090071405645",
  "type": "post",
  "url": "2013/10/openstack-quantum-neutron-plug-in-there.html"
}