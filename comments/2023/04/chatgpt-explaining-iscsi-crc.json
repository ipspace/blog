{
   "comments": [
      {
         "comments": [
            {
               "date": "16 April 2023 03:27",
               "html": "<p>So I decided to go for it, and the results (as expected) are much better, but the generic <em>caveat emptor</em> still applies &#x1F937;&zwj;&#x2642;&#xFE0F;</p>\n",
               "id": "1756",
               "name": "Ivan Pepelnjak",
               "pub": "2023-04-16T15:27:48",
               "ref": "1755",
               "type": "comment"
            }
         ],
         "date": "16 April 2023 12:51",
         "html": "<p>Ivan, unless they added the GPT4 to the free tier, it&rsquo;s all apples and oranges comparison :-)</p>\n\n<p>My 2c: get GPT+ and use GPT4 - you will see the difference. GPT4 still has &ldquo;the terminator line of bullshit&rdquo;, and still needs the fact-check, but it usually is more informative.</p>\n\n<p>Here&rsquo;s the tidbit of the convo for the last prompt, it doesn&rsquo;t sound too terrible to me:</p>\n\n<p>Me: Which CRC algorithm is Ethernet using?</p>\n\n<p>GPT4: Ethernet uses a specific 32-bit Cyclic Redundancy Check (CRC) algorithm known as CRC-32. More precisely, Ethernet employs the CRC-32C (Castagnoli) variant, which is defined by the polynomial 0x1EDC6F41. This variant is known for its excellent error detection capabilities and is widely used in many communication protocols and applications.</p>\n\n<p>The CRC-32C algorithm calculates the Frame Check Sequence (FCS) based on the frame&#39;s data and appends it to the end of the frame before transmission. Upon receiving the frame, the recipient calculates the CRC-32C value based on the received data and compares it with the received FCS. If the calculated value matches the received FCS, the frame is considered error-free. If not, an error is detected, and the frame is discarded.</p>\n\n<p>The CRC-32C algorithm is effective at detecting various types of transmission errors, such as single-bit errors, burst errors, and errors caused by noise or interference, ensuring data integrity at the data link layer (Layer 2) of the OSI model.</p>\n",
         "id": "1755",
         "name": " Andrew Yourtchenko",
         "pub": "2023-04-16T12:51:45",
         "type": "comment"
      }
   ],
   "count": 1,
   "type": "post",
   "url": "2023/04/chatgpt-explaining-iscsi-crc.html"
}
