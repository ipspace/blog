{
   "comments": [
      {
         "date": "10 January 2023 03:30",
         "html": "<p>Hi Ivan,</p>\n\n<p>Thank you for this article.</p>\n\n<p>While &quot;expectation of in-order packet delivery&quot; was an eyebrow-raiser for me (it&#39;s literally the opposite!), the complaint that TCP has HoL blocking when unrelated messages are fired into a single socket was my signal to put this paper down and do something else.</p>\n\n<p>I hope those fanning the hype on this topic can reorganize around reasonable criticisms and actual problems experienced by sensibly written applications.</p>\n\n<p>Oh... And Golang absolutely needs more jabs for its ridiculous violation of both Postel&#39;s law and the Principle of Least Surprise with its insane TCP_NODELAY defaults. While it&#39;s probably too late to un-ring that bell, the situation sure smells like a similar bad call based on somebody&#39;s narrow view on what constitutes a widespread problem.</p>\n",
         "id": "1590",
         "name": "chris marget ",
         "pub": "2023-01-10T15:30:05",
         "type": "comment"
      },
      {
         "date": "10 January 2023 06:23",
         "html": "<p>Thanks for this article! I have enjoyed reading it...</p>\n\n<p>I have regularly get such academic ideas without seeing a proper experience in real-life networking. \nI am so tired of them... Since the early nineties... :-)</p>\n\n<p>Most of those research guys have no ideas about realities. They should read your blog to capture some stuff... :-) Keep going! </p>\n",
         "id": "1591",
         "name": "Bela Varkonyi",
         "pub": "2023-01-10T18:23:39",
         "type": "comment"
      },
      {
         "comments": [
            {
               "date": "12 January 2023 02:06",
               "html": "<p>I think you are accusing technical incompetence where you should be critisising weak phrasing.</p>\n\n<p>&quot;BS, a transport protocol does none of that, neither should it. TCP doesn&#39;t do it either. Why should TCP or any transport protocol care about scheduling? Queuing/scheduling is a network function, be it done in the NIC or in the routers/switches. If I&#39;m wrong, pls point out.&quot;</p>\n\n<p>Fair scheduling probably is not the most precise term, but congestion control basically trickles down to trying to achieve something approaching fairness.</p>\n\n<p>&quot;TCP needs in-order delivery: utter nonsense. What are its segment number and retransmission mechanism for?&quot;</p>\n\n<p>Avoiding much out-of-order delivery is important still if you care about performance, which is what this paper is all about.</p>\n\n<p>&quot;Don&#39;t think so. When a packet doesn&#39;t come within its expected time window, then TCP assumes it&#39;s lost in transit/dropped and attempts rectification. If it arrives out of order but doesn&#39;t get lost, TCP couldn&#39;t care less.&quot;</p>\n\n<p>However, with many in-between packets as can occur in the decribed context (packet-granular link load balancing), fast retransmit may cause additional traffic and reduce the congestion window/sending rate. </p>\n\n<p>&quot;per-packet LB has existed for so long. It&#39;s used within networks (not on Internet where flow-based LB is used) to promote better LB than flow-based and because within a network, it&#39;s easier to control QoS.&quot;\nI do however agree with this. The prevalent notion that packet spraying causes heavy out-of-order delivery is usually wrong on paths with symmetric link capacities and similar delay.</p>\n\n<p>&quot;congestion often happens due to hotspots, which can be due to sudden overload (link failure, flapping), or incast, LRD/self-similar traffic&quot;\nagain, the argument is not really that flow-consistent routing is actually the root cause, but that, if it were not for that, the available link capacity could be used more effectively.</p>\n\n<p>All in all, while i do agree that with a title like that, he is just asking for angry responses, i also wonder whether the critics could be a bit more fair and maybe even more polite. The notion that this guy has just no idea what he is talking about because he is an academic is cheap and just plain wrong.</p>\n",
               "id": "1593",
               "name": " tmp",
               "pub": "2023-01-12T14:06:58",
               "ref": "1592",
               "type": "comment"
            }
         ],
         "date": "12 January 2023 09:03",
         "html": "<p>I don&#39;t have problem with people wanting to push protocols. My thinking on this is similar to that of Rodney Brooks: try thousands of things, a lot of them will fail, but we&#39;ll learn a lot and realize what&#39;s working to keep. But people should go beyond talking about protocols on papers; it rings hollow. Have the guts to implement them in the real world (or are they afraid of risking their own money?) If a protocol can prove itself, surely it&#39;ll catch on in time.</p>\n\n<p>Having said that, there&#39;s no need to use the typical tactic of talking down another one to boost your own, and if you do so, stick to the right metrics. I agree with the majority of what you wrote in this blog. TCP has its own flaws, serious ones at that, but a lot of what John brought up was bogus. For ex:</p>\n\n<p>&quot;In TCP, when a host&rsquo;s link is overloaded (either for incoming or outgoing traffic), TCP attempts to share the available bandwidth equally among the active connections. This approach is also referred to as &ldquo;fair scheduling.&rdquo;</p>\n\n<p>BS, a transport protocol does none of that, neither should it. TCP doesn&#39;t do it either. Why should TCP or any transport protocol care about scheduling? Queuing/scheduling is a network function, be it done in the NIC or in the routers/switches. If I&#39;m wrong, pls point out.</p>\n\n<p>TCP needs in-order delivery: utter nonsense. What are its segment number and retransmission mechanism for? </p>\n\n<p>&quot;it assumes that out-of-order arrivals indicate packet drops.&quot; Don&#39;t think so. When a packet doesn&#39;t come within its expected time window, then TCP assumes it&#39;s lost in transit/dropped and attempts rectification. If it arrives out of order but doesn&#39;t get lost, TCP couldn&#39;t care less.</p>\n\n<p>&quot;packet spraying cannot be used with TCP&quot;: per-packet LB has existed for so long. It&#39;s used within networks (not on Internet where flow-based LB is used) to promote better LB than flow-based and because within a network, it&#39;s easier to control QoS. </p>\n\n<p>&quot;I hypothesize that flow-consistent routing is responsible for virtually all of the congestion that occurs in the core of data center networks&quot;: congestion often happens due to hotspots, which can be due to sudden overload (link failure, flapping), or incast, LRD/self-similar traffic...Whether you use flow-based or packet-based routing, you can&#39;t get over these inconveniences. That&#39;s why trivial traffic modeling can&#39;t speak for reality, and we need to put protocols in action instead of just testing them in some simplistic lab scenarios.</p>\n\n<p>Homa has its merit, so John and his team should spend their effort pushing it in real networks and see how it fares in reality. That will be more productive and helpful, than writing paper talking down TCP on faults it&#39;s not responsible for. </p>\n",
         "id": "1592",
         "name": " Minh",
         "pub": "2023-01-12T09:03:20",
         "type": "comment"
      }
   ],
   "count": 3,
   "type": "post",
   "url": "2023/01/data-center-tcp-replacement.html"
}
